version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.19

commands:
  deploy:
    description: "Deploy"
    steps:
      - run: yarn deploy
  build:
    description: "Build"
    parameters:
      directory:
        type: string
    steps:
      - run:
          name: Build << parameters.directory >>
          command: |
            cd ~/workspace/<< parameters.directory >>
            yarn build
      - run:
          name: Test << parameters.directory >>
          command: |
            cd ~/workspace/<< parameters.directory >>
            yarn test
      - store_artifacts:
          path: ~/workspace/<< parameters.directory >>/reports/junit
      - store_test_results:
          path: ~/workspace/<< parameters.directory >>/reports/junit


jobs:
  prepare:
    working_directory: ~/workspace
    docker:
      - image: circleci/node:12.9.1
    steps:
      - checkout
      - restore_cache:
          key: node_modules
      - run:
          name: "Install"
          command: yarn install
      - build:
          directory: tools/logger
      - build:
          directory: tools/envs
      - build:
          directory: tools/database
      - build:
          directory: tools/geojson
      - build:
          directory: apis/google
      - build:
          directory: events/index
      - build:
          directory: events/compute-rides
      - save_cache:
          paths:
            - ./node_modules
          key: node_modules-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths: .

  deploy-compute-stage-staging:
    environment:
      - STAGE: staging
    docker:
      - image: circleci/node:12.9.1
    working_directory: ~/workspace/events/compute-stage
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Build
          command: yarn build
      - run:
          name: Test
          command: yarn test
      - store_artifacts:
          path: ./reports/junit
      - store_test_results:
          path: ./reports/junit
      - deploy

  deploy-graphql-staging:
    environment:
      - STAGE: staging
    docker:
      - image: circleci/node:12.9.1
    working_directory: ~/workspace/backend/graphql
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Build
          command: yarn build
      - deploy

  deploy-graphql-production:
    environment:
      - STAGE: production
    docker:
      - image: circleci/node:12.9.1
    working_directory: ~/workspace/backend/graphql

    steps:
      - aws-cli/setup
      - attach_workspace:
          at: ~/workspace

      - deploy

  deploy-website-staging:
    environment:
      - STAGE: staging
    docker:
      - image: circleci/node:12.9.1

    working_directory: ~/workspace/website

    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: "Build"
          command: yarn build
      - deploy

  deploy-website-production:
    environment:
      - STAGE: production
    docker:
      - image: circleci/node:12.9.1

    working_directory: ~/workspace/website
    steps:
      - attach_workspace:
          at: ~/workspace
      - run: gatsby build
      - deploy

workflows:
  version: 2
  Deploy Staging:
    jobs:
      - prepare:
          filters:
            branches:
              only: staging

      - deploy-graphql-staging:
          requires:
            - prepare

      - deploy-website-staging:
          requires:
            - deploy-graphql-staging

  Deploy Production:
    jobs:
      - prepare:
          filters:
            branches:
              only: master
      - deploy-graphql-production:
          context: guided-production
          requires:
            - prepare

      - deploy-website-production:
          context: guided-production
          requires:
            - prepare
            - deploy-graphql-production