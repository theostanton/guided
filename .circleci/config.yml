version: 2.1

be_node_modules_key: &be_node_modules_key v1-node_modules-{{ .Branch }}-{{ .Revision }}
working_directory: &working_directory ~/workspace

restore_be_node_modules: &restore_be_node_modules
  restore_cache:
    key: *be_node_modules_key

save_be_node_modules: &save_be_node_modules
  save_cache:
    key: *be_node_modules_key
    paths:
      - ~workspace/backend/node_modules

orbs:
  aws-cli: circleci/aws-cli@0.1.19
  terraform: ngs/terraform@0.0.1
  shellcheck: circleci/shellcheck@1.3.15

commands:
  test:
    steps:
      - run:
          name: "Test"
          environment:
            TEST_DATABASE_URL: 'postgresql://root@localhost/circle_test'
          command: |
            cd backend
            yarn test:all

      - store_artifacts:
          path: ~workspace/backend/reports/junit
      - store_test_results:
          path: ~workspace/backend/reports/junit

jobs:
  tests:
    working_directory: ~/workspace
    environment:
      - STAGE: test
      - DATABASE_URL: postgresql://postgres@localhost/circle_test
    docker:
      - image: circleci/node:12.9.1
      - image: circleci/postgres:9.6-alpine-ram
    steps:
      - checkout
      - run:
          name: Run tests
          command: yarn test:all
      - store_artifacts:
          path: ~workspace/reports/junit
      - store_test_results:
          path: ~workspace/reports/junit

  deploy-frontend:
    docker:
      - image: circleci/node:12.9.1
    working_directory: ~/workspace
    steps:
      - checkout
      - run:
          name: "Install terraform"
          command: |
            cd deploy
            sudo  sh ./scripts/install_terraform.sh
      - run:
          name: "Init terraform"
          command: |
            cd deploy
            terraform init
      - run:
          name: "Install dependencies"
          command: |
            cd frontend/website
            yarn install

      - run:
          name: "Deploy and Deploy"
          command: |
            cd deploy
            export BUILD=true
            export DEPLOY=true
            chmod +x ./scripts/deploy.frontend.sh
            ./scripts/deploy.frontend.sh


  build-backend:
    docker:
      - image: circleci/node:12.9.1
    working_directory: *working_directory
    steps:
      - checkout
      - add_ssh_keys
      - *restore_be_node_modules
      - run:
          name: "Install dependencies"
          command: |
            cd backend
            yarn install
      - *save_be_node_modules
      - run:
          name: "Lint"
          command: |
            cd backend
            yarn lint

      - run:
          name: "Test"
          command: |
            cd backend
            yarn test:all
      - run:
          name: "Install terraform"
          command: |
            cd deploy
            sudo  sh ./scripts/install_terraform.sh
      - run:
          name: "Init terraform"
          command: |
            cd deploy
            terraform init
      - run:
          name: "Build"
          environment:
            BUILD: 'true'
            DEPLOY: 'false'
          command: |
            cd deploy
            chmod +x ./scripts/deploy.backend.sh
            ./scripts/deploy.backend.sh
      - persist_to_workspace:
          root: *working_directory
          paths:
            - deploy/dist/cache
            - deploy/dist/server.js
            - deploy/dist/compute.zip

  build-go:
    docker:
      - image: circleci/golang:1.14
    working_directory: *working_directory
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: "Install"
          command: |
            cd go/amend_dates
            go install .
      - run:
          name: "Test"
          command: |
            cd go/amend_dates
            go test .
      - run:
          name: "Build"
          command: |
            cd go/amend_dates
            mkdir -p ~/workspace/deploy/dist
            go build -o ~/workspace/deploy/dist .
            cd ~/workspace
            ls
            cd deploy
            ls
            cd dist
            ls
      - persist_to_workspace:
          root: *working_directory
          paths:
            - deploy/dist/amend_dates

  deploy-backend:
    docker:
      - image: hashicorp/terraform:light
    working_directory: *working_directory
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: "Log before"
          command: |
            cd deploy
            ls
            cd dist
            ls
      - attach_workspace:
          at: ~workspace
      - run:
          name: "Log after"
          command: |
            cd deploy
            ls
            cd dist
            ls


workflows:
  version: 2

  Deploy Staging backend:
    jobs:
      - build-backend:
          context: guided-staging
          filters:
            branches:
              only: staging
      - build-go:
          context: guided-staging
          filters:
            branches:
              only: staging
      - deploy-backend:
          context: guided-staging
          filters:
            branches:
              only: staging
          requires:
            - build-backend
            - build-go

  Deploy Staging frontend:
    jobs:
      - deploy-frontend:
          context: guided-staging
          filters:
            branches:
              only: staging

  Deploy Production:
    jobs:
      - shellcheck/check:
          filters:
            branches:
              only: master
