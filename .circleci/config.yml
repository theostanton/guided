version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.19
  terraform: ngs/terraform@0.0.1
  shellcheck: circleci/shellcheck@1.3.15

jobs:
  deploy-frontend:
    docker:
      - image: circleci/node:12.9.1
    working_directory: ~/workspace
    steps:
      - checkout
      - run:
          name: "Install terraform"
          command: |
            cd deploy
            sudo  sh ./install_terraform.sh
      - run:
          name: "Init terraform"
          command: |
            cd deploy
            terraform init
      - run:
          name: "Install gatsby"
          command: |
            cd frontend/website
            yarn global add gatsby-cli
      - run:
          name: "Install dependencies"
          command: |
            cd frontend/website
            yarn install
      - run:
          name: "Build and deploy"
          environment:
            BUILD: true
            DEPLOY: true
          command: |
            cd deploy
            bash ./deploy.frontend.sh

  deploy-backend:
    docker:
      - image: circleci/node:12.9.1
    working_directory: ~/workspace
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: "Install terraform"
          command: |
            cd deploy
            sudo sh ./install_terraform.sh

      - run:
          name: "Install dependencies"
          command: |
            cd backend
            yarn install

      - run:
          name: "Init"
          command: |
            cd deploy
            terraform init

      - run:
          name: "Build and deploy"
          environment:
            BUILD: true
            DEPLOY: true
          command: |
            cd deploy
            bash ./deploy.backend.sh

workflows:
  version: 2
  Deploy Staging:
    jobs:
      - shellcheck/check
          filters:
            branches:
              only: staging
      - deploy-backend:
          context: guided-staging
          requires:
            - shellcheck/check
      - deploy-frontend:
          requires:
            - deploy-backend
  Deploy Production:
    jobs:
      - shellcheck/check
          filters:
            branches:
              only: master
      - deploy-backend:
          context: guided-production
          requires:
            - shellcheck/check
      - deploy-frontend:
          requires:
            - deploy-backend
