{"ast":null,"code":"\"use strict\";var _interopRequireDefault2=require(\"@babel/runtime/helpers/interopRequireDefault\");var _regenerator=_interopRequireDefault2(require(\"@babel/runtime/regenerator\"));var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _unfetch=_interopRequireDefault(require(\"next/dist/build/polyfills/unfetch\"));var _eventSourcePolyfill=_interopRequireDefault(require(\"./event-source-polyfill\"));var _eventsource=require(\"./error-overlay/eventsource\");var _onDemandEntriesUtils=require(\"./on-demand-entries-utils\");var _fouc=require(\"./fouc\");if(!window.EventSource){window.EventSource=_eventSourcePolyfill.default;}var data=JSON.parse(document.getElementById('__NEXT_DATA__').textContent);var assetPrefix=data.assetPrefix,page=data.page;assetPrefix=assetPrefix||'';var mostRecentHash=null;var curHash=__webpack_hash__;var hotUpdatePath=assetPrefix+(assetPrefix.endsWith('/')?'':'/')+'_next/static/webpack/';function isUpdateAvailable(){return mostRecentHash!==__webpack_hash__;}function canApplyUpdates(){return module.hot.status()==='idle';}function tryApplyUpdates(){var res,_data,curPage,pageUpdated;return _regenerator.default.async(function tryApplyUpdates$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!isUpdateAvailable()||!canApplyUpdates())){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.prev=2;_context.next=5;return _regenerator.default.awrap((0,_unfetch.default)(\"\"+hotUpdatePath+curHash+\".hot-update.json\"));case 5:res=_context.sent;_context.next=8;return _regenerator.default.awrap(res.json());case 8:_data=_context.sent;curPage=page==='/'?'index':page;pageUpdated=Object.keys(_data.c).some(function(mod){return mod.indexOf(\"pages\"+(curPage.substr(0,1)==='/'?curPage:\"/\"+curPage))!==-1||mod.indexOf((\"pages\"+(curPage.substr(0,1)==='/'?curPage:\"/\"+curPage)).replace(/\\//g,'\\\\'))!==-1;});if(pageUpdated){document.location.reload(true);}else{curHash=mostRecentHash;}_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);console.error('Error occurred checking for update',_context.t0);document.location.reload(true);case 18:case\"end\":return _context.stop();}}},null,null,[[2,14]],Promise);}(0,_eventsource.getEventSourceWrapper)({path:assetPrefix+\"/_next/webpack-hmr\"}).addMessageListener(function(event){if(event.data===\"\\uD83D\\uDC93\"){return;}try{var message=JSON.parse(event.data);if(message.action==='sync'||message.action==='built'){if(!message.hash){return;}mostRecentHash=message.hash;tryApplyUpdates();}else if(message.action==='reloadPage'){document.location.reload(true);}}catch(ex){console.warn('Invalid HMR message: '+event.data+'\\n'+ex);}});(0,_onDemandEntriesUtils.setupPing)(assetPrefix,function(){return page;});(0,_fouc.displayContent)();","map":{"version":3,"sources":["../../../client/dev/amp-dev.js"],"names":["window","EventSourcePolyfill","data","JSON","document","assetPrefix","mostRecentHash","curHash","hotUpdatePath","module","isUpdateAvailable","canApplyUpdates","res","curPage","page","pageUpdated","Object","mod","console","path","event","message","tryApplyUpdates"],"mappings":"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","sourcesContent":["/* globals __webpack_hash__ */\nimport fetch from 'next/dist/build/polyfills/unfetch'\nimport EventSourcePolyfill from './event-source-polyfill'\nimport { getEventSourceWrapper } from './error-overlay/eventsource'\nimport { setupPing } from './on-demand-entries-utils'\nimport { displayContent } from './fouc'\n\nif (!window.EventSource) {\n  window.EventSource = EventSourcePolyfill\n}\n\nconst data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent)\nlet { assetPrefix, page } = data\nassetPrefix = assetPrefix || ''\nlet mostRecentHash = null\n/* eslint-disable-next-line */\nlet curHash = __webpack_hash__\nconst hotUpdatePath =\n  assetPrefix + (assetPrefix.endsWith('/') ? '' : '/') + '_next/static/webpack/'\n\n// Is there a newer version of this code available?\nfunction isUpdateAvailable() {\n  // __webpack_hash__ is the hash of the current compilation.\n  // It's a global variable injected by Webpack.\n  /* eslint-disable-next-line */\n  return mostRecentHash !== __webpack_hash__\n}\n\n// Webpack disallows updates in other states.\nfunction canApplyUpdates() {\n  return module.hot.status() === 'idle'\n}\n\n// This function reads code updates on the fly and hard\n// reloads the page when it has changed.\nasync function tryApplyUpdates() {\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    return\n  }\n  try {\n    const res = await fetch(`${hotUpdatePath}${curHash}.hot-update.json`)\n    const data = await res.json()\n    const curPage = page === '/' ? 'index' : page\n    const pageUpdated = Object.keys(data.c).some((mod) => {\n      return (\n        mod.indexOf(\n          `pages${curPage.substr(0, 1) === '/' ? curPage : `/${curPage}`}`\n        ) !== -1 ||\n        mod.indexOf(\n          `pages${\n            curPage.substr(0, 1) === '/' ? curPage : `/${curPage}`\n          }`.replace(/\\//g, '\\\\')\n        ) !== -1\n      )\n    })\n\n    if (pageUpdated) {\n      document.location.reload(true)\n    } else {\n      curHash = mostRecentHash\n    }\n  } catch (err) {\n    console.error('Error occurred checking for update', err)\n    document.location.reload(true)\n  }\n}\n\ngetEventSourceWrapper({\n  path: `${assetPrefix}/_next/webpack-hmr`,\n}).addMessageListener((event) => {\n  if (event.data === '\\uD83D\\uDC93') {\n    return\n  }\n\n  try {\n    const message = JSON.parse(event.data)\n\n    if (message.action === 'sync' || message.action === 'built') {\n      if (!message.hash) {\n        return\n      }\n      mostRecentHash = message.hash\n      tryApplyUpdates()\n    } else if (message.action === 'reloadPage') {\n      document.location.reload(true)\n    }\n  } catch (ex) {\n    console.warn('Invalid HMR message: ' + event.data + '\\n' + ex)\n  }\n})\n\nsetupPing(assetPrefix, () => page)\ndisplayContent()\n"]},"metadata":{},"sourceType":"script"}