{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _mobxReact = require(\"mobx-react\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _Login = _interopRequireDefault(require(\"../screens/Login\"));\n\nvar _Signup = _interopRequireDefault(require(\"../screens/Signup\"));\n\nvar _Home = _interopRequireDefault(require(\"../screens/Home\"));\n\nvar _Account = _interopRequireDefault(require(\"../screens/Account\"));\n\nvar _routing = require(\"../utils/routing\");\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/Users/theo/Code/guided/frontend/site/src/pages/index.tsx\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar Stack = (0, _stack.createStackNavigator)();\nvar App = (_dec = (0, _mobxReact.inject)('authStore'), _dec(_class = (0, _mobxReact.observer)(_class = function (_React$Component) {\n  (0, _inherits2[\"default\"])(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    (0, _classCallCheck2[\"default\"])(this, App);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2[\"default\"])(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log('this.props.authStore.isLoggedIn', this.props.authStore.isLoggedIn);\n\n      if (this.props.authStore.isLoggedIn) {\n        return _react[\"default\"].createElement(_native.NavigationContainer, {\n          linking: _routing.linking,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }\n        }, _react[\"default\"].createElement(Stack.Screen, {\n          name: 'Login',\n          component: _Login[\"default\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }), _react[\"default\"].createElement(Stack.Screen, {\n          name: 'Signup',\n          component: _Signup[\"default\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return _react[\"default\"].createElement(_View[\"default\"], {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 9\n          }\n        }, _react[\"default\"].createElement(_native.NavigationContainer, {\n          linking: _routing.linking,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, _react[\"default\"].createElement(Stack.Screen, {\n          name: 'Home',\n          component: _Home[\"default\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }\n        }), _react[\"default\"].createElement(Stack.Screen, {\n          name: 'Account',\n          component: _Account[\"default\"],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n  }]);\n  return App;\n}(_react[\"default\"].Component)) || _class) || _class);\nexports[\"default\"] = App;\n\nvar styles = _StyleSheet[\"default\"].create({});","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/pages/index.tsx"],"names":["Stack","observer","App","React","Component","console","linking","LoginScreen","SignupScreen","HomeScreen","AccountScreen","styles","StyleSheet"],"mappings":"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","sourcesContent":["import {StyleSheet, View} from 'react-native';\nimport React from 'react';\nimport {inject, observer} from 'mobx-react';\nimport AuthStore from 'stores/AuthStore';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {NavigationContainer} from '@react-navigation/native';\nimport LoginScreen from 'screens/Login';\nimport SignupScreen from 'screens/Signup';\nimport HomeScreen from 'screens/Home';\nimport AccountScreen from 'screens/Account';\nimport {linking, ParamList} from 'utils/routing';\n\nconst Stack = createStackNavigator<ParamList>();\n\ntype Props = {\n  authStore: AuthStore\n}\n\n@inject('authStore')\n@observer\nexport default class App extends React.Component<Props> {\n  render() {\n    console.log('this.props.authStore.isLoggedIn', this.props.authStore.isLoggedIn);\n    if (this.props.authStore.isLoggedIn) {\n      return (\n        <NavigationContainer linking={linking}>\n          <Stack.Screen name={'Login'} component={LoginScreen}/>\n          <Stack.Screen name={'Signup'} component={SignupScreen}/>\n        </NavigationContainer>\n      );\n    } else {\n      return (\n        <View>\n          <NavigationContainer linking={linking}>\n            <Stack.Screen name={'Home'} component={HomeScreen}/>\n            <Stack.Screen name={'Account'} component={AccountScreen}/>\n          </NavigationContainer>\n        </View>\n      );\n    }\n  }\n}\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"script"}