{"ast":null,"code":"var _class, _descriptor, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { action, computed, observable } from 'mobx';\nimport client, { USER_KEY } from 'api/client';\nimport * as storage from 'utils/storage';\nimport { GetUsernameDocument, LoginDocument, SignUpDocument } from 'api/generated';\nimport { Store } from 'stores/Store';\nlet AuthStore = (_class = (_temp = class AuthStore extends Store {\n  constructor() {\n    super();\n\n    _initializerDefineProperty(this, \"user\", _descriptor, this);\n\n    storage.getObject(USER_KEY).then(user => {\n      this.user = user;\n    });\n  }\n\n  hydrate(initialData) {}\n\n  get isLoggedIn() {\n    return this.user !== undefined;\n  }\n\n  setUser(user) {\n    if (user) {\n      storage.setObject(USER_KEY, user);\n    } else {\n      storage.remove(USER_KEY);\n    }\n\n    this.user = user;\n  }\n\n  async login(email, password) {\n    var _result$data$authenti;\n\n    const variables = {\n      email,\n      password\n    };\n    const result = await client.mutate({\n      mutation: LoginDocument,\n      variables\n    });\n\n    if (result.errors && result.errors.length > 0) {\n      // logError('LoginMutation error');\n      result.errors.forEach(error => {// logError(error.message);\n      });\n      return {\n        success: false,\n        message: result.errors.map(error => {\n          return error.message;\n        }).join('\\n')\n      };\n    }\n\n    if (!((_result$data$authenti = result.data.authenticate) === null || _result$data$authenti === void 0 ? void 0 : _result$data$authenti.jwtToken)) {\n      return {\n        success: false,\n        message: 'Failed to login'\n      };\n    }\n\n    const bearerToken = result.data.authenticate.jwtToken;\n    this.setUser({\n      email,\n      bearerToken\n    });\n    const usernameResult = await client.query({\n      query: GetUsernameDocument,\n      variables: {\n        email\n      }\n    });\n\n    if (usernameResult.errors && usernameResult.errors.length > 0) {\n      usernameResult.errors.forEach(error => {});\n      this.setUser(undefined);\n      return {\n        success: false,\n        message: result.errors.map(error => {\n          return error.message;\n        }).join('\\n')\n      };\n    }\n\n    const {\n      colour,\n      username\n    } = usernameResult.data.users.nodes[0];\n    this.setUser({\n      username,\n      email,\n      bearerToken\n    });\n    return {\n      success: true\n    };\n  }\n\n  async signUp(username, email, password) {\n    const variables = {\n      username,\n      email,\n      password\n    };\n    const result = await client.mutate({\n      mutation: SignUpDocument,\n      variables\n    });\n\n    if (result.errors && result.errors.length > 0) {\n      return {\n        success: false,\n        message: result.errors.map(error => {\n          return error.message;\n        }).join('\\n')\n      };\n    }\n\n    return this.login(email, password);\n  }\n\n  logOut() {\n    this.setUser(undefined);\n    console.log('logOUt this.user=', this.user);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"user\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"isLoggedIn\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isLoggedIn\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setUser\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setUser\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"logOut\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"logOut\"), _class.prototype)), _class);\nexport { AuthStore as default };","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/stores/AuthStore/index.ts"],"names":["action","computed","observable","client","USER_KEY","storage","GetUsernameDocument","LoginDocument","SignUpDocument","Store","AuthStore","constructor","getObject","then","user","hydrate","initialData","isLoggedIn","undefined","setUser","setObject","remove","login","email","password","variables","result","mutate","mutation","errors","length","forEach","error","success","message","map","join","data","authenticate","jwtToken","bearerToken","usernameResult","query","colour","username","users","nodes","signUp","logOut","console","log"],"mappings":"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","sourcesContent":["import {action, computed, observable} from 'mobx';\nimport client, {USER_KEY} from 'api/client';\nimport * as storage from 'utils/storage';\nimport {\n  GetUsernameDocument,\n  GetUsernameQuery,\n  GetUsernameQueryVariables,\n  LoginDocument,\n  LoginMutation,\n  LoginMutationVariables,\n  SignUpDocument,\n  SignUpMutation,\n  SignUpMutationVariables,\n} from 'api/generated';\nimport {Store} from 'stores/Store';\n\nexport type User = {\n  bearerToken: string;\n  username?: string;\n  email: string;\n};\n\nexport default class AuthStore extends Store<User> {\n  @observable\n  user: User | undefined;\n\n  constructor() {\n    super();\n    storage.getObject<User>(USER_KEY).then((user) => {\n      this.user = user;\n    });\n  }\n\n  hydrate(initialData: User | undefined) {}\n\n  @computed\n  get isLoggedIn(): boolean {\n    return this.user !== undefined;\n  }\n\n  @action\n  setUser(user: User | undefined) {\n    if (user) {\n      storage.setObject(USER_KEY, user);\n    } else {\n      storage.remove(USER_KEY);\n    }\n    this.user = user;\n  }\n\n  async login(\n    email: string,\n    password: string,\n  ): Promise<{\n    success: boolean;\n    message?: string;\n  }> {\n    const variables: LoginMutationVariables = {\n      email,\n      password,\n    };\n    const result = await client.mutate<LoginMutation>({\n      mutation: LoginDocument,\n      variables,\n    });\n\n    if (result.errors && result.errors.length > 0) {\n      // logError('LoginMutation error');\n      result.errors.forEach((error) => {\n        // logError(error.message);\n      });\n      return {\n        success: false,\n        message: result.errors\n          .map((error) => {\n            return error.message;\n          })\n          .join('\\n'),\n      };\n    }\n\n    if (!result.data.authenticate?.jwtToken) {\n      return {\n        success: false,\n        message: 'Failed to login',\n      };\n    }\n\n    const bearerToken = result.data!.authenticate!.jwtToken;\n\n    this.setUser({\n      email,\n      bearerToken,\n    });\n\n    const usernameResult = await client.query<GetUsernameQuery>({\n      query: GetUsernameDocument,\n      variables: {\n        email,\n      } as GetUsernameQueryVariables,\n    });\n\n    if (usernameResult.errors && usernameResult.errors.length > 0) {\n      usernameResult.errors.forEach((error) => {});\n\n      this.setUser(undefined);\n      return {\n        success: false,\n        message: result.errors\n          .map((error) => {\n            return error.message;\n          })\n          .join('\\n'),\n      };\n    }\n\n    const {colour, username} = usernameResult.data!.users!.nodes[0]!;\n\n    this.setUser({\n      username,\n      email,\n      bearerToken,\n    });\n\n    return {\n      success: true,\n    };\n  }\n\n  async signUp(\n    username: string,\n    email: string,\n    password: string,\n  ): Promise<{success: boolean; message?: string}> {\n    const variables: SignUpMutationVariables = {\n      username,\n      email,\n      password,\n    };\n    const result = await client.mutate<SignUpMutation>({\n      mutation: SignUpDocument,\n      variables,\n    });\n\n    if (result.errors && result.errors.length > 0) {\n      return {\n        success: false,\n        message: result.errors\n          .map((error) => {\n            return error.message;\n          })\n          .join('\\n'),\n      };\n    }\n\n    return this.login(email, password);\n  }\n\n  @action\n  logOut() {\n    this.setUser(undefined);\n    console.log('logOUt this.user=', this.user);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}