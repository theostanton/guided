{"ast":null,"code":"import AsyncStorage from '@react-native-community/async-storage';\nexport async function setItem(key, value) {\n  return AsyncStorage.setItem(key, value);\n}\nexport async function removeItem(key) {\n  return AsyncStorage.removeItem(key);\n}\n\nasync function getItem(key) {\n  return AsyncStorage.getItem(key);\n}\n\nasync function clear() {\n  return AsyncStorage.clear();\n}\n\nfunction initWithNamespace(nspace) {\n  if (typeof localStorage !== 'undefined') {\n    localStorage[nspace] = localStorage[nspace] ? localStorage[nspace] : '{}';\n  }\n}\n\nfunction getAllFromLocalStorage() {\n  return Promise.resolve(JSON.parse(localStorage[namespace]));\n}","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/utils/storage.ts"],"names":["AsyncStorage","setItem","key","value","removeItem","getItem","clear","initWithNamespace","nspace","localStorage","getAllFromLocalStorage","Promise","resolve","JSON","parse","namespace"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AAEA,OAAO,eAAeC,OAAf,CAAuBC,GAAvB,EAAoCC,KAApC,EAAmD;AACxD,SAAOH,YAAY,CAACC,OAAb,CAAqBC,GAArB,EAA0BC,KAA1B,CAAP;AACD;AAED,OAAO,eAAeC,UAAf,CAA0BF,GAA1B,EAA+B;AACpC,SAAOF,YAAY,CAACI,UAAb,CAAwBF,GAAxB,CAAP;AACD;;AAED,eAAeG,OAAf,CAAuBH,GAAvB,EAA6C;AAC3C,SAAOF,YAAY,CAACK,OAAb,CAAqBH,GAArB,CAAP;AACD;;AAED,eAAeI,KAAf,GAAuB;AACrB,SAAON,YAAY,CAACM,KAAb,EAAP;AACD;;AAED,SAASC,iBAAT,CAA2BC,MAA3B,EAAmC;AACjC,MAAI,OAAOC,YAAP,KAAwB,WAA5B,EAAyC;AACvCA,IAAAA,YAAY,CAACD,MAAD,CAAZ,GAAuBC,YAAY,CAACD,MAAD,CAAZ,GAAuBC,YAAY,CAACD,MAAD,CAAnC,GAA8C,IAArE;AACD;AACF;;AAED,SAASE,sBAAT,GAAkC;AAChC,SAAOC,OAAO,CAACC,OAAR,CAAgBC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACM,SAAD,CAAvB,CAAhB,CAAP;AACD","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage';\n\nexport async function setItem(key: string, value: string) {\n  return AsyncStorage.setItem(key, value);\n}\n\nexport async function removeItem(key) {\n  return AsyncStorage.removeItem(key);\n}\n\nasync function getItem(key): Promise<string> {\n  return AsyncStorage.getItem(key);\n}\n\nasync function clear() {\n  return AsyncStorage.clear();\n}\n\nfunction initWithNamespace(nspace) {\n  if (typeof localStorage !== 'undefined') {\n    localStorage[nspace] = localStorage[nspace] ? localStorage[nspace] : '{}';\n  }\n}\n\nfunction getAllFromLocalStorage() {\n  return Promise.resolve(JSON.parse(localStorage[namespace]));\n}\n"]},"metadata":{},"sourceType":"module"}