{"ast":null,"code":"/**\n * storage.js - wrapper to abstract localStorage implementation for web\n * react-native-web-storage\n *\n * Created by Peter Kowalczyk on 07/01/17.\n * Copyright © 2017 Aurity. All rights reserved.\n *\n */\nvar namespace = 'appStore';\ninitWithNamespace(namespace);\n/*\n TODO:\n - missing \"key\" support\n - missing \"length\" support\n */\n\nvar storageService = {\n  setItem: setItem,\n  setToken: setToken,\n  getToken: getToken,\n  removeItem: removeItem,\n  getItem: getItem,\n  store: store,\n  clear: clear,\n  getAllFromLocalStorage: getAllFromLocalStorage\n};\nexport default storageService;\n\nfunction setItem(key, value) {\n  var items = storageService.store();\n  items[key] = value;\n  localStorage[namespace] = JSON.stringify(items);\n  return storageService;\n}\n\nfunction setToken(value) {\n  return setItem('token', value);\n}\n\nfunction getToken(value) {\n  return getItem('token', value);\n}\n\nfunction removeItem(key) {\n  var items = storageService.store();\n  delete items[key];\n  localStorage[namespace] = JSON.stringify(items);\n  return storageService;\n}\n\nfunction getItem(key) {\n  var items = storageService.store();\n  return items[key];\n}\n\nfunction store() {\n  return JSON.parse(localStorage[namespace]);\n}\n\nfunction clear() {\n  delete localStorage[namespace];\n  initWithNamespace(namespace);\n  return storageService;\n}\n\nfunction initWithNamespace(nspace) {\n  if (typeof localStorage !== 'undefined') {\n    localStorage[nspace] = localStorage[nspace] ? localStorage[nspace] : '{}';\n  }\n}\n\nfunction getAllFromLocalStorage() {\n  return Promise.resolve(JSON.parse(localStorage[namespace]));\n}","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/utils/storage.ts"],"names":["namespace","initWithNamespace","storageService","setItem","setToken","getToken","removeItem","getItem","store","clear","getAllFromLocalStorage","key","value","items","localStorage","JSON","stringify","parse","nspace","Promise","resolve"],"mappings":"AAAA;;;;;;;;AAQA,IAAMA,SAAS,GAAG,UAAlB;AACAC,iBAAiB,CAACD,SAAD,CAAjB;AAEA;;;;;;AAKA,IAAME,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAPA,OADqB;AAErBC,EAAAA,QAAQ,EAARA,QAFqB;AAGrBC,EAAAA,QAAQ,EAARA,QAHqB;AAIrBC,EAAAA,UAAU,EAAVA,UAJqB;AAKrBC,EAAAA,OAAO,EAAPA,OALqB;AAMrBC,EAAAA,KAAK,EAALA,KANqB;AAOrBC,EAAAA,KAAK,EAALA,KAPqB;AAQrBC,EAAAA,sBAAsB,EAAtBA;AARqB,CAAvB;AAWA,eAAeR,cAAf;;AAEA,SAASC,OAAT,CAAiBQ,GAAjB,EAAsBC,KAAtB,EAA6B;AAC3B,MAAMC,KAAK,GAAGX,cAAc,CAACM,KAAf,EAAd;AAEAK,EAAAA,KAAK,CAACF,GAAD,CAAL,GAAaC,KAAb;AACAE,EAAAA,YAAY,CAACd,SAAD,CAAZ,GAA0Be,IAAI,CAACC,SAAL,CAAeH,KAAf,CAA1B;AAEA,SAAOX,cAAP;AACD;;AAED,SAASE,QAAT,CAAkBQ,KAAlB,EAAyB;AACvB,SAAOT,OAAO,CAAC,OAAD,EAAUS,KAAV,CAAd;AACD;;AAED,SAASP,QAAT,CAAkBO,KAAlB,EAAyB;AACvB,SAAOL,OAAO,CAAC,OAAD,EAAUK,KAAV,CAAd;AACD;;AAED,SAASN,UAAT,CAAoBK,GAApB,EAAyB;AACvB,MAAME,KAAK,GAAGX,cAAc,CAACM,KAAf,EAAd;AACA,SAAOK,KAAK,CAACF,GAAD,CAAZ;AACAG,EAAAA,YAAY,CAACd,SAAD,CAAZ,GAA0Be,IAAI,CAACC,SAAL,CAAeH,KAAf,CAA1B;AAEA,SAAOX,cAAP;AACD;;AAED,SAASK,OAAT,CAAiBI,GAAjB,EAAsB;AACpB,MAAME,KAAK,GAAGX,cAAc,CAACM,KAAf,EAAd;AAEA,SAAOK,KAAK,CAACF,GAAD,CAAZ;AACD;;AAED,SAASH,KAAT,GAAiB;AACf,SAAOO,IAAI,CAACE,KAAL,CAAWH,YAAY,CAACd,SAAD,CAAvB,CAAP;AACD;;AAED,SAASS,KAAT,GAAiB;AACf,SAAOK,YAAY,CAACd,SAAD,CAAnB;AACAC,EAAAA,iBAAiB,CAACD,SAAD,CAAjB;AAEA,SAAOE,cAAP;AACD;;AAED,SAASD,iBAAT,CAA2BiB,MAA3B,EAAmC;AACjC,MAAI,OAAOJ,YAAP,KAAwB,WAA5B,EAAyC;AACvCA,IAAAA,YAAY,CAACI,MAAD,CAAZ,GAAuBJ,YAAY,CAACI,MAAD,CAAZ,GAAuBJ,YAAY,CAACI,MAAD,CAAnC,GAA8C,IAArE;AACD;AACF;;AAED,SAASR,sBAAT,GAAkC;AAChC,SAAOS,OAAO,CAACC,OAAR,CAAgBL,IAAI,CAACE,KAAL,CAAWH,YAAY,CAACd,SAAD,CAAvB,CAAhB,CAAP;AACD","sourcesContent":["/**\n * storage.js - wrapper to abstract localStorage implementation for web\n * react-native-web-storage\n *\n * Created by Peter Kowalczyk on 07/01/17.\n * Copyright © 2017 Aurity. All rights reserved.\n *\n */\nconst namespace = 'appStore';\ninitWithNamespace(namespace);\n\n/*\n TODO:\n - missing \"key\" support\n - missing \"length\" support\n */\nconst storageService = {\n  setItem,\n  setToken,\n  getToken,\n  removeItem,\n  getItem,\n  store,\n  clear,\n  getAllFromLocalStorage,\n};\n\nexport default storageService;\n\nfunction setItem(key, value) {\n  const items = storageService.store();\n\n  items[key] = value;\n  localStorage[namespace] = JSON.stringify(items);\n\n  return storageService;\n}\n\nfunction setToken(value) {\n  return setItem('token', value);\n}\n\nfunction getToken(value) {\n  return getItem('token', value);\n}\n\nfunction removeItem(key) {\n  const items = storageService.store();\n  delete items[key];\n  localStorage[namespace] = JSON.stringify(items);\n\n  return storageService;\n}\n\nfunction getItem(key) {\n  const items = storageService.store();\n\n  return items[key];\n}\n\nfunction store() {\n  return JSON.parse(localStorage[namespace]);\n}\n\nfunction clear() {\n  delete localStorage[namespace];\n  initWithNamespace(namespace);\n\n  return storageService;\n}\n\nfunction initWithNamespace(nspace) {\n  if (typeof localStorage !== 'undefined') {\n    localStorage[nspace] = localStorage[nspace] ? localStorage[nspace] : '{}';\n  }\n}\n\nfunction getAllFromLocalStorage() {\n  return Promise.resolve(JSON.parse(localStorage[namespace]));\n}\n"]},"metadata":{},"sourceType":"module"}