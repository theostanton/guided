{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/theo/Code/guided/frontend/site/src/components/Signup/index.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Button from \"react-native-web/dist/cjs/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport { inject } from 'mobx-react';\nimport LabelledTextInput from 'components/LabelledTextInput';\nimport { h4 } from '../../styles/text';\nlet Signup = (_dec = inject('authStore'), _dec(_class = (_temp = class Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      error: undefined,\n      loading: false\n    };\n  }\n\n  get buttonDisabled() {\n    return this.state.email.length === 0 || this.state.username.length === 0 || this.state.password.length === 0 || this.state.loading === true;\n  }\n\n  async signUp() {\n    const {\n      password,\n      username,\n      email\n    } = this.state;\n    this.setState({\n      loading: true\n    });\n\n    try {\n      const result = await this.props.authStore.signUp(username, email, password);\n\n      if (result.success) {\n        await this.props.router.goHome();\n      } else {\n        this.setState({\n          error: result.message || 'Something went wrong',\n          loading: false\n        });\n      }\n    } catch (e) {\n      console.error(e);\n      this.setState({\n        error: e,\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return __jsx(View, {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, __jsx(LabelledTextInput, {\n      label: 'Username',\n      inputType: 'username',\n      onChange: text => {\n        this.setState({\n          username: text\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Login component\"), __jsx(LabelledTextInput, {\n      label: 'Email',\n      onChange: text => {\n        this.setState({\n          email: text\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Login component\"), __jsx(LabelledTextInput, {\n      label: 'Password',\n      inputType: 'password',\n      onChange: text => {\n        this.setState({\n          password: text\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Login component\"), __jsx(View, {\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      title: 'Log in',\n      disabled: this.buttonDisabled,\n      onPress: async () => {\n        await this.signUp();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), __jsx(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, __jsx(Text, {\n      style: styles.already,\n      onPress: async () => {\n        await this.props.router.goToLogin();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Already a member? Click to log in\")));\n  }\n\n}, _temp)) || _class);\nexport { Signup as default };\nconst styles = StyleSheet.create({\n  root: {\n    maxWidth: 400,\n    width: '100%',\n    alignSelf: 'center',\n    flexDirection: 'column'\n  },\n  textInput: {},\n  button: {},\n  already: _objectSpread({}, h4)\n});","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/components/Signup/index.tsx"],"names":["React","inject","LabelledTextInput","h4","Signup","Component","state","email","username","password","error","undefined","loading","buttonDisabled","length","signUp","setState","result","props","authStore","success","router","goHome","message","e","console","render","styles","root","text","button","already","goToLogin","StyleSheet","create","maxWidth","width","alignSelf","flexDirection","textInput"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, StyleSheet, Text, View} from 'react-native';\nimport AuthStore from 'stores/AuthStore';\nimport {inject} from 'mobx-react';\nimport LabelledTextInput from 'components/LabelledTextInput';\nimport {RouterProp} from '../../utils/router/RouterProp';\nimport {h4} from '../../styles/text';\n\ntype Props =RouterProp &  {\n  authStore?: AuthStore;\n};\ntype State = {\n  email: string;\n  username: string;\n  password: string;\n  loading: boolean;\n  error: any | undefined;\n};\n\n@inject('authStore')\nexport default class Signup extends React.Component<Props, State> {\n  state: State = {\n    email: '',\n    username: '',\n    password: '',\n    error: undefined,\n    loading: false,\n  };\n\n  get buttonDisabled(): boolean {\n    return (\n      this.state.email.length === 0 ||\n      this.state.username.length === 0 ||\n      this.state.password.length === 0 ||\n      this.state.loading === true\n    );\n  }\n\n  async signUp(): Promise<void> {\n    const {password, username, email} = this.state;\n    this.setState({loading: true});\n    try {\n      const result = await this.props.authStore.signUp(\n        username,\n        email,\n        password,\n      );\n      if (result.success) {\n        await this.props.router.goHome()\n      } else {\n        this.setState({\n          error: result.message || 'Something went wrong',\n          loading: false,\n        });\n      }\n    } catch (e) {\n      console.error(e);\n      this.setState({error: e, loading: false});\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.root}>\n        <LabelledTextInput\n          label={'Username'}\n          inputType={'username'}\n          onChange={(text) => {\n            this.setState({\n              username: text,\n            });\n          }}>\n          Login component\n        </LabelledTextInput>\n        <LabelledTextInput\n          label={'Email'}\n          onChange={(text) => {\n            this.setState({\n              email: text,\n            });\n          }}>\n          Login component\n        </LabelledTextInput>\n        <LabelledTextInput\n          label={'Password'}\n          inputType={'password'}\n          onChange={(text) => {\n            this.setState({\n              password: text,\n            });\n          }}>\n          Login component\n        </LabelledTextInput>\n        <View style={styles.button}>\n          <Button\n            title={'Log in'}\n            disabled={this.buttonDisabled}\n            onPress={async () => {\n              await this.signUp();\n            }}\n          />\n        </View>\n        <View>\n          <Text\n            style={styles.already}\n            onPress={async () => {\n              await this.props.router.goToLogin()\n            }}\n          >\n            Already a member? Click to log in\n          </Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    maxWidth: 400,\n    width: '100%',\n    alignSelf: 'center',\n    flexDirection: 'column',\n  },\n  textInput: {},\n  button: {},\n  already: {\n    ...h4\n  },\n});\n"]},"metadata":{},"sourceType":"module"}