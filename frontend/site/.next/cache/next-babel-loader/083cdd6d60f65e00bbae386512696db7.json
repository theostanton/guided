{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/Users/theo/Code/guided/frontend/site/src/pages/index.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { linking } from 'utils/router/ParamList';\nimport LoginScreen from 'screens/Login';\nimport SignupScreen from 'screens/Signup';\nimport HomeScreen from '../screens/Home';\nimport AccountScreen from '../screens/Account';\nvar Stack = createStackNavigator();\nvar App = (_dec = inject('authStore'), _dec(_class = observer(_class = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log('this.props.authStore.isLoggedIn', this.props.authStore.isLoggedIn);\n\n      if (this.props.authStore.isLoggedIn) {\n        return __jsx(NavigationContainer, {\n          linking: linking,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }\n        }, __jsx(Stack.Screen, {\n          name: 'Login',\n          component: LoginScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }\n        }), __jsx(Stack.Screen, {\n          name: 'Signup',\n          component: SignupScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return __jsx(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }\n        }, __jsx(NavigationContainer, {\n          linking: linking,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }\n        }, __jsx(Stack.Screen, {\n          name: 'Home',\n          component: HomeScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }\n        }), __jsx(Stack.Screen, {\n          name: 'Account',\n          component: AccountScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component)) || _class) || _class);\nexport { App as default };\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/pages/index.tsx"],"names":["React","inject","observer","createStackNavigator","NavigationContainer","linking","LoginScreen","SignupScreen","HomeScreen","AccountScreen","Stack","App","console","log","props","authStore","isLoggedIn","Component","styles","StyleSheet","create"],"mappings":";;;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AAEA,SAAQC,oBAAR,QAAmC,yBAAnC;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,OAAR,QAAiC,wBAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AAGA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;IAQqBQ,G,WAFpBV,MAAM,CAAC,WAAD,C,gBACNC,Q;;;;;;;;;;;;;6BAEU;AACPU,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+C,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,UAApE;;AACA,UAAI,KAAKF,KAAL,CAAWC,SAAX,CAAqBC,UAAzB,EAAqC;AACnC,eACE,MAAC,mBAAD;AAAqB,UAAA,OAAO,EAAEX,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAE,OAApB;AAA6B,UAAA,SAAS,EAAEC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAE,QAApB;AAA8B,UAAA,SAAS,EAAEC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AAMD,OAPD,MAOO;AACL,eACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,mBAAD;AAAqB,UAAA,OAAO,EAAEF,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAE,MAApB;AAA4B,UAAA,SAAS,EAAEG,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAE,SAApB;AAA+B,UAAA,SAAS,EAAEC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF,CADF;AAQD;AACF;;;;EApB8BT,KAAK,CAACiB,S;SAAlBN,G;AAuBrB,IAAMO,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import {StyleSheet, View} from 'react-native';\nimport React from 'react';\nimport {inject, observer} from 'mobx-react';\nimport AuthStore from 'stores/AuthStore';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {linking, ParamList} from 'utils/router/ParamList';\nimport LoginScreen from 'screens/Login';\nimport SignupScreen from 'screens/Signup';\nimport HomeScreen from '../screens/Home';\nimport AccountScreen from '../screens/Account';\n\n\nconst Stack = createStackNavigator<ParamList>();\n\ntype Props = {\n  authStore: AuthStore\n}\n\n@inject('authStore')\n@observer\nexport default class App extends React.Component<Props> {\n  render() {\n    console.log('this.props.authStore.isLoggedIn', this.props.authStore.isLoggedIn);\n    if (this.props.authStore.isLoggedIn) {\n      return (\n        <NavigationContainer linking={linking}>\n          <Stack.Screen name={'Login'} component={LoginScreen}/>\n          <Stack.Screen name={'Signup'} component={SignupScreen}/>\n        </NavigationContainer>\n      );\n    } else {\n      return (\n        <View>\n          <NavigationContainer linking={linking}>\n            <Stack.Screen name={'Home'} component={HomeScreen}/>\n            <Stack.Screen name={'Account'} component={AccountScreen}/>\n          </NavigationContainer>\n        </View>\n      );\n    }\n  }\n}\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}