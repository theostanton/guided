{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _class,\n    _jsxFileName = \"/Users/theo/Code/guided/frontend/site/src/App.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport React from 'react';\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nimport { observer, Provider } from 'mobx-react';\nimport AuthStore from 'stores/AuthStore';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LoginScreen from 'screens/login';\nimport SignupScreen from './screens/signup';\nvar authStore = new AuthStore();\nvar linking = {\n  prefixes: [],\n  config: {\n    screens: {\n      Home: '',\n      Signup: 'signup',\n      Login: 'login'\n    }\n  }\n};\nvar Stack = createStackNavigator();\n\nvar App = observer(_class = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Provider, {\n        authStore: authStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, __jsx(NavigationContainer, {\n        linking: linking,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, __jsx(Stack.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, __jsx(Stack.Screen, {\n        name: 'Login',\n        component: LoginScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }), __jsx(Stack.Screen, {\n        name: 'Signup',\n        component: SignupScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component)) || _class;\n\nexport { App as default };\n;\nvar styles = StyleSheet.create({\n  scrollView: {\n    backgroundColor: Colors.lighter\n  },\n  root: {\n    display: 'flex'\n  },\n  content: {\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/App.tsx"],"names":["NavigationContainer","React","Colors","observer","Provider","AuthStore","createStackNavigator","LoginScreen","SignupScreen","authStore","linking","prefixes","config","screens","Home","Signup","Login","Stack","App","Component","styles","StyleSheet","create","scrollView","backgroundColor","lighter","root","display","content","alignSelf"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,8BAAP;;AAGA,SAAwBA,mBAAxB,QAAkD,0BAAlD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,MAAR,QAAqB,qCAArB;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAAQC,oBAAR,QAAmC,yBAAnC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,IAAMC,SAAS,GAAG,IAAIJ,SAAJ,EAAlB;AAEA,IAAMK,OAAuB,GAAG;AAC9BC,EAAAA,QAAQ,EAAE,EADoB;AAE9BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,EADC;AAEPC,MAAAA,MAAM,EAAE,QAFD;AAGPC,MAAAA,KAAK,EAAE;AAHA;AADH;AAFsB,CAAhC;AAWA,IAAMC,KAAK,GAAGX,oBAAoB,EAAlC;;IAGqBY,G,GADpBf,Q;;;;;;;;;;;;;6BAGU;AACP,aACE,MAAC,QAAD;AAAU,QAAA,SAAS,EAAEM,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,mBAAD;AAAqB,QAAA,OAAO,EAAEC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAE,OAApB;AAA6B,QAAA,SAAS,EAAEH,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAE,QAApB;AAA8B,QAAA,SAAS,EAAEC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,CADF;AAUD;;;;EAb8BP,KAAK,CAACkB,S;;SAAlBD,G;AAcpB;AAED,IAAME,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAEtB,MAAM,CAACuB;AADd,GADmB;AAI/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GAJyB;AAO/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ;AAPsB,CAAlB,CAAf","sourcesContent":["import 'react-native-gesture-handler';\n\nimport {StyleSheet} from 'react-native';\nimport {LinkingOptions, NavigationContainer} from '@react-navigation/native';\n\nimport React from 'react';\n\nimport {Colors} from 'react-native/Libraries/NewAppScreen';\nimport {observer, Provider} from 'mobx-react';\nimport AuthStore from 'stores/AuthStore';\nimport {createStackNavigator} from '@react-navigation/stack';\n\nimport LoginScreen from 'screens/login';\nimport SignupScreen from './screens/signup';\n\nconst authStore = new AuthStore();\n\nconst linking: LinkingOptions = {\n  prefixes: [],\n  config: {\n    screens: {\n      Home: '',\n      Signup: 'signup',\n      Login: 'login',\n    },\n  },\n};\n\nconst Stack = createStackNavigator<ParamList>();\n\n@observer\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <Provider authStore={authStore}>\n        <NavigationContainer linking={linking}>\n          <Stack.Navigator>\n            <Stack.Screen name={'Login'} component={LoginScreen}/>\n            <Stack.Screen name={'Signup'} component={SignupScreen}/>\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    backgroundColor: Colors.lighter,\n  },\n  root: {\n    display: 'flex',\n  },\n  content: {\n    alignSelf: 'center',\n  },\n});\n\n"]},"metadata":{},"sourceType":"module"}