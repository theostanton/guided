{"ast":null,"code":"var _jsxFileName = \"/Users/theo/Code/guided/frontend/site/src/components/Link/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport NextLink from 'next/link';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nexport default class Link extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._textRef = void 0;\n    this.state = {\n      hover: false\n    };\n\n    this._setRef = c => {\n      this._textRef = c;\n    };\n  }\n\n  blur() {\n    this._textRef.blur();\n  }\n\n  focus() {\n    this._textRef.focus();\n  }\n\n  setNativeProps(props) {\n    this._textRef.setNativeProps(props);\n  }\n\n  render() {\n    const styles = StyleSheet.create({\n      root: {\n        opacity: this.state.hover === true ? 0.5 : 1.0\n      }\n    });\n\n    const _this$props = this.props,\n          {\n      as,\n      passHref,\n      // ignore\n      scroll,\n      prefetch,\n      href,\n      shallow,\n      replace\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"as\", \"passHref\", \"scroll\", \"prefetch\", \"href\", \"shallow\", \"replace\"]);\n\n    const style = [styles.root];\n    return __jsx(NextLink, {\n      style: style,\n      href: href,\n      passHref: true,\n      prefetch: prefetch,\n      replace: replace,\n      scroll: scroll,\n      shallow: shallow,\n      onMouseEnter: () => {\n        this.setState({\n          hover: true\n        });\n      },\n      onMouseLeave: () => {\n        this.setState({\n          hover: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, __jsx(Text, _extends({\n      accessibilityRole: \"link\",\n      ref: this._setRef\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), this.props.children));\n  }\n\n}","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/components/Link/index.tsx"],"names":["React","NextLink","Link","Component","_textRef","state","hover","_setRef","c","blur","focus","setNativeProps","props","render","styles","StyleSheet","create","root","opacity","as","passHref","scroll","prefetch","href","shallow","replace","rest","style","setState","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAiBA,eAAe,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAiD;AAAA;AAAA;AAAA,SACtDC,QADsD;AAAA,SAG9DC,KAH8D,GAG/C;AACbC,MAAAA,KAAK,EAAE;AADM,KAH+C;;AAAA,SAmB9DC,OAnB8D,GAmBnDC,CAAD,IAAO;AACf,WAAKJ,QAAL,GAAgBI,CAAhB;AACD,KArB6D;AAAA;;AAO9DC,EAAAA,IAAI,GAAG;AACL,SAAKL,QAAL,CAAcK,IAAd;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,SAAKN,QAAL,CAAcM,KAAd;AACD;;AAEDC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AACpB,SAAKR,QAAL,CAAcO,cAAd,CAA6BC,KAA7B;AACD;;AAMDC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE,KAAKb,KAAL,CAAWC,KAAX,KAAqB,IAArB,GAA4B,GAA5B,GAAkC;AADvC;AADyB,KAAlB,CAAf;;AAMA,wBASI,KAAKM,KATT;AAAA,UAAM;AACJO,MAAAA,EADI;AAEJC,MAAAA,QAFI;AAEM;AACVC,MAAAA,MAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,IALI;AAMJC,MAAAA,OANI;AAOJC,MAAAA;AAPI,KAAN;AAAA,UAQKC,IARL;;AAWA,UAAMC,KAAK,GAAG,CAACb,MAAM,CAACG,IAAR,CAAd;AACA,WACE,MAAC,QAAD;AACE,MAAA,KAAK,EAAEU,KADT;AAEE,MAAA,IAAI,EAAEJ,IAFR;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,QAAQ,EAAED,QAJZ;AAKE,MAAA,OAAO,EAAEG,OALX;AAME,MAAA,MAAM,EAAEJ,MANV;AAOE,MAAA,OAAO,EAAEG,OAPX;AAQE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKI,QAAL,CAAc;AACZtB,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAZH;AAaE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKsB,QAAL,CAAc;AACZtB,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAkBE,MAAC,IAAD;AAAM,MAAA,iBAAiB,EAAC,MAAxB;AAA+B,MAAA,GAAG,EAAE,KAAKC;AAAzC,OAAsDmB,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACG,KAAKd,KAAL,CAAWiB,QADd,CAlBF,CADF;AAwBD;;AAlE6D","sourcesContent":["import React, {Ref} from 'react';\nimport NextLink from 'next/link';\nimport {LinkProps} from 'next/link';\nimport Router from 'next/router';\nimport {StyleSheet, Text, TextStyle, View, ViewStyle} from 'react-native';\n\ntype Props = {\n  href?: string;\n  onClick?: () => Promise<void>;\n  viewStyle?: ViewStyle;\n  textStyle?: TextStyle;\n  selected?: boolean;\n} & LinkProps &\n  TextStyle;\ntype State = {\n  hover: boolean;\n};\n\nexport default class Link extends React.Component<Props, State> {\n  private _textRef: any;\n\n  state: State = {\n    hover: false,\n  };\n\n  blur() {\n    this._textRef.blur();\n  }\n\n  focus() {\n    this._textRef.focus();\n  }\n\n  setNativeProps(props) {\n    this._textRef.setNativeProps(props);\n  }\n\n  _setRef = (c) => {\n    this._textRef = c;\n  };\n\n  render() {\n    const styles = StyleSheet.create({\n      root: {\n        opacity: this.state.hover === true ? 0.5 : 1.0,\n      },\n    });\n\n    const {\n      as,\n      passHref, // ignore\n      scroll,\n      prefetch,\n      href,\n      shallow,\n      replace,\n      ...rest\n    } = this.props;\n\n    const style = [styles.root];\n    return (\n      <NextLink\n        style={style}\n        href={href}\n        passHref={true}\n        prefetch={prefetch}\n        replace={replace}\n        scroll={scroll}\n        shallow={shallow}\n        onMouseEnter={() => {\n          this.setState({\n            hover: true,\n          });\n        }}\n        onMouseLeave={() => {\n          this.setState({\n            hover: false,\n          });\n        }}>\n        <Text accessibilityRole=\"link\" ref={this._setRef} {...rest}>\n          {this.props.children}\n        </Text>\n      </NextLink>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}