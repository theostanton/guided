{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/theo/Code/guided/frontend/site/src/components/Login/index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport { inject } from 'mobx-react';\nimport LabelledTextInput from 'components/LabelledTextInput';\nlet Login = (_dec = inject('authStore'), _dec(_class = (_temp = class Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      error: undefined,\n      loading: false\n    };\n  }\n\n  async logIn() {\n    const {\n      password,\n      email\n    } = this.state;\n    this.setState({\n      loading: true\n    });\n\n    try {\n      const result = await this.props.authStore.login(email, password);\n\n      if (result.success) {// await navigate(`/`)\n      } else {\n        this.setState({\n          error: result.message || 'Something went wrong',\n          loading: false\n        });\n      }\n    } catch (e) {\n      console.error(e);\n      this.setState({\n        error: e,\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return __jsx(View, {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, __jsx(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, __jsx(LabelledTextInput, {\n      label: 'email',\n      onChange: text => {\n        console.log('email->', text);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Login component\"), __jsx(LabelledTextInput, {\n      label: 'password',\n      onChange: text => {\n        console.log('password->', text);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"Login component\")));\n  }\n\n}, _temp)) || _class);\nexport { Login as default };\nconst styles = StyleSheet.create({\n  root: {\n    flexDirection: 'column'\n  },\n  container: {\n    // maxWidth: 600,\n    // flex: 1,\n    // flexGrow: 1,\n    // justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#00ff00'\n  }\n});","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/components/Login/index.tsx"],"names":["React","inject","LabelledTextInput","Login","Component","state","email","password","error","undefined","loading","logIn","setState","result","props","authStore","login","success","message","e","console","render","styles","root","container","text","log","StyleSheet","create","flexDirection","backgroundColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAAQC,MAAR,QAAqB,YAArB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;IAaqBC,K,WADpBF,MAAM,CAAC,WAAD,C,yBAAP,MACqBE,KADrB,SACmCH,KAAK,CAACI,SADzC,CACiE;AAAA;AAAA;AAAA,SAC/DC,KAD+D,GAChD;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE,EAFG;AAGbC,MAAAA,KAAK,EAAEC,SAHM;AAIbC,MAAAA,OAAO,EAAE;AAJI,KADgD;AAAA;;AAQ/D,QAAMC,KAAN,GAA6B;AAC3B,UAAM;AAACJ,MAAAA,QAAD;AAAWD,MAAAA;AAAX,QAAoB,KAAKD,KAA/B;AACA,SAAKO,QAAL,CAAc;AAACF,MAAAA,OAAO,EAAE;AAAV,KAAd;;AACA,QAAI;AACF,YAAMG,MAAM,GAAG,MAAM,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,KAArB,CAA2BV,KAA3B,EAAkCC,QAAlC,CAArB;;AACA,UAAIM,MAAM,CAACI,OAAX,EAAoB,CAClB;AACD,OAFD,MAEO;AACL,aAAKL,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAAEK,MAAM,CAACK,OAAP,IAAkB,sBADb;AAEZR,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID;AACF,KAVD,CAUE,OAAOS,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACZ,KAAR,CAAcW,CAAd;AACA,WAAKP,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAEW,CAAR;AAAWT,QAAAA,OAAO,EAAE;AAApB,OAAd;AACD;AACF;;AAEDW,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,iBAAD;AACE,MAAA,KAAK,EAAE,OADT;AAEE,MAAA,QAAQ,EAAGC,IAAD,IAAU;AAClBL,QAAAA,OAAO,CAACM,GAAR,CAAY,SAAZ,EAAuBD,IAAvB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAQE,MAAC,iBAAD;AACE,MAAA,KAAK,EAAE,UADT;AAEE,MAAA,QAAQ,EAAGA,IAAD,IAAU;AAClBL,QAAAA,OAAO,CAACM,GAAR,CAAY,YAAZ,EAA0BD,IAA1B;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARF,CADF,CADF;AAoBD;;AAhD8D,C;SAA5CtB,K;AAmDrB,MAAMmB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,IAAI,EAAE;AACJM,IAAAA,aAAa,EAAE;AADX,GADyB;AAI/BL,EAAAA,SAAS,EAAE;AACT;AACA;AACA;AACA;AACAK,IAAAA,aAAa,EAAE,QALN;AAMTC,IAAAA,eAAe,EAAE;AANR;AAJoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport AuthStore from 'stores/AuthStore';\nimport {inject} from 'mobx-react';\nimport LabelledTextInput from 'components/LabelledTextInput';\n\ntype Props = {\n  authStore?: AuthStore;\n};\ntype State = {\n  email: string;\n  password: string;\n  loading: boolean;\n  error: any | undefined;\n};\n\n@inject('authStore')\nexport default class Login extends React.Component<Props, State> {\n  state: State = {\n    email: '',\n    password: '',\n    error: undefined,\n    loading: false,\n  };\n\n  async logIn(): Promise<void> {\n    const {password, email} = this.state;\n    this.setState({loading: true});\n    try {\n      const result = await this.props.authStore.login(email, password);\n      if (result.success) {\n        // await navigate(`/`)\n      } else {\n        this.setState({\n          error: result.message || 'Something went wrong',\n          loading: false,\n        });\n      }\n    } catch (e) {\n      console.error(e);\n      this.setState({error: e, loading: false});\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.root}>\n        <View style={styles.container}>\n          <LabelledTextInput\n            label={'email'}\n            onChange={(text) => {\n              console.log('email->', text);\n            }}>\n            Login component\n          </LabelledTextInput>\n          <LabelledTextInput\n            label={'password'}\n            onChange={(text) => {\n              console.log('password->', text);\n            }}>\n            Login component\n          </LabelledTextInput>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flexDirection: 'column',\n  },\n  container: {\n    // maxWidth: 600,\n    // flex: 1,\n    // flexGrow: 1,\n    // justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#00ff00',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}