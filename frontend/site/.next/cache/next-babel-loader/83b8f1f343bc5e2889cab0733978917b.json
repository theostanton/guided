{"ast":null,"code":"\"use strict\";exports.__esModule=true;exports.defaultHead=defaultHead;exports.default=void 0;var _react=_interopRequireDefault(require(\"react\"));var _sideEffect=_interopRequireDefault(require(\"./side-effect\"));var _ampContext=require(\"./amp-context\");var _headManagerContext=require(\"./head-manager-context\");var _amp=require(\"./amp\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function defaultHead(){var inAmpMode=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var head=[_react.default.createElement(\"meta\",{charSet:\"utf-8\"})];if(!inAmpMode){head.push(_react.default.createElement(\"meta\",{name:\"viewport\",content:\"width=device-width\"}));}return head;}function onlyReactElement(list,child){if(typeof child==='string'||typeof child==='number'){return list;}if(child.type===_react.default.Fragment){return list.concat(_react.default.Children.toArray(child.props.children).reduce(function(fragmentList,fragmentChild){if(typeof fragmentChild==='string'||typeof fragmentChild==='number'){return fragmentList;}return fragmentList.concat(fragmentChild);},[]));}return list.concat(child);}var METATYPES=['name','httpEquiv','charSet','itemProp'];function unique(){var keys=new Set();var tags=new Set();var metaTypes=new Set();var metaCategories={};return function(h){var unique=true;if(h.key&&typeof h.key!=='number'&&h.key.indexOf('$')>0){var key=h.key.slice(h.key.indexOf('$')+1);if(keys.has(key)){unique=false;}else{keys.add(key);}}switch(h.type){case'title':case'base':if(tags.has(h.type)){unique=false;}else{tags.add(h.type);}break;case'meta':for(var i=0,len=METATYPES.length;i<len;i++){var metatype=METATYPES[i];if(!h.props.hasOwnProperty(metatype))continue;if(metatype==='charSet'){if(metaTypes.has(metatype)){unique=false;}else{metaTypes.add(metatype);}}else{var category=h.props[metatype];var categories=metaCategories[metatype]||new Set();if(categories.has(category)){unique=false;}else{categories.add(category);metaCategories[metatype]=categories;}}}break;}return unique;};}function reduceComponents(headElements,props){return headElements.reduce(function(list,headElement){var headElementChildren=_react.default.Children.toArray(headElement.props.children);return list.concat(headElementChildren);},[]).reduce(onlyReactElement,[]).reverse().concat(defaultHead(props.inAmpMode)).filter(unique()).reverse().map(function(c,i){var key=c.key||i;return _react.default.cloneElement(c,{key:key});});}var Effect=(0,_sideEffect.default)();function Head(_ref){var children=_ref.children;return _react.default.createElement(_ampContext.AmpStateContext.Consumer,null,function(ampState){return _react.default.createElement(_headManagerContext.HeadManagerContext.Consumer,null,function(updateHead){return _react.default.createElement(Effect,{reduceComponentsToState:reduceComponents,handleStateChange:updateHead,inAmpMode:(0,_amp.isInAmpMode)(ampState)},children);});});}_c=Head;Head.rewind=Effect.rewind;var _default=Head;exports.default=_default;var _c;$RefreshReg$(_c,\"Head\");","map":{"version":3,"sources":["../../../next-server/lib/head.tsx"],"names":["inAmpMode","head","child","React","list","fragmentList","METATYPES","keys","tags","metaTypes","metaCategories","h","unique","key","i","len","metatype","category","categories","headElements","headElementChildren","headElement","defaultHead","props","c","Effect","ampState","updateHead","Head"],"mappings":"4FAAA,GAAA,CAAA,MAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA,CACA,GAAA,CAAA,WAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CACA,GAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,C,kFAMO,SAAA,CAAA,WAAA,EAAuD,IAAlCA,CAAAA,SAAkC,2DAAvD,KAAuD,CAC5D,GAAMC,CAAAA,IAAI,CAAG,CAAC,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CAAM,OAAO,CAA3B,OAAc,CAAA,CAAD,CAAb,CACA,GAAI,CAAJ,SAAA,CAAgB,CACdA,IAAI,CAAJA,IAAAA,CAAU,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CAAM,IAAI,CAAV,UAAA,CAAsB,OAAO,CAAvCA,oBAAU,CAAA,CAAVA,EAEF,OAAA,CAAA,IAAA,CAGF,SAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,KAAA,CAGkC,CAEhC,GAAI,MAAA,CAAA,KAAA,GAAA,QAAA,EAA6B,MAAA,CAAA,KAAA,GAAjC,QAAA,CAA4D,CAC1D,MAAA,CAAA,IAAA,CAEF,CACA,GAAIC,KAAK,CAALA,IAAAA,GAAeC,MAAAA,CAAAA,OAAAA,CAAnB,QAAA,CAAmC,CACjC,MAAOC,CAAAA,IAAI,CAAJA,MAAAA,CACLD,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,OAAAA,CAAuBD,KAAK,CAALA,KAAAA,CAAvBC,QAAAA,EAAAA,MAAAA,CACE,SAAA,YAAA,CAAA,aAAA,CAGqC,CACnC,GACE,MAAA,CAAA,aAAA,GAAA,QAAA,EACA,MAAA,CAAA,aAAA,GAFF,QAAA,CAGE,CACA,MAAA,CAAA,YAAA,CAEF,OAAOE,CAAAA,YAAY,CAAZA,MAAAA,CAAP,aAAOA,CAAP,CAXJF,CAAAA,CADF,EACEA,CADKC,CAAP,CAkBF,OAAOA,CAAAA,IAAI,CAAJA,MAAAA,CAAP,KAAOA,CAAP,CAGF,IAAME,CAAAA,SAAS,CAAG,CAAA,MAAA,CAAA,WAAA,CAAA,SAAA,CAAlB,UAAkB,CAAlB,CAOA,QAAA,CAAA,MAAA,EAAkB,CAChB,GAAMC,CAAAA,IAAI,CAAG,GAAb,CAAA,GAAa,EAAb,CACA,GAAMC,CAAAA,IAAI,CAAG,GAAb,CAAA,GAAa,EAAb,CACA,GAAMC,CAAAA,SAAS,CAAG,GAAlB,CAAA,GAAkB,EAAlB,CACA,GAAMC,CAAAA,cAAmD,CAAzD,EAAA,CAEA,MAAQC,UAAAA,CAAD,CAAgC,CACrC,GAAIC,CAAAA,MAAM,CAAV,IAAA,CAEA,GAAID,CAAC,CAADA,GAAAA,EAAS,MAAOA,CAAAA,CAAC,CAAR,GAAA,GAATA,QAAAA,EAAsCA,CAAC,CAADA,GAAAA,CAAAA,OAAAA,CAAAA,GAAAA,EAA1C,CAAA,CAAkE,CAChE,GAAME,CAAAA,GAAG,CAAGF,CAAC,CAADA,GAAAA,CAAAA,KAAAA,CAAYA,CAAC,CAADA,GAAAA,CAAAA,OAAAA,CAAAA,GAAAA,EAAxB,CAAYA,CAAZ,CACA,GAAIJ,IAAI,CAAJA,GAAAA,CAAJ,GAAIA,CAAJ,CAAmB,CACjBK,MAAM,CAANA,KAAAA,CADF,CAAA,IAEO,CACLL,IAAI,CAAJA,GAAAA,CAAAA,GAAAA,EAEH,CAED,CACA,OAAQI,CAAC,CAAT,IAAA,EACE,IAAA,OAAA,CACA,IAAA,MAAA,CACE,GAAIH,IAAI,CAAJA,GAAAA,CAASG,CAAC,CAAd,IAAIH,CAAJ,CAAsB,CACpBI,MAAM,CAANA,KAAAA,CADF,CAAA,IAEO,CACLJ,IAAI,CAAJA,GAAAA,CAASG,CAAC,CAAVH,IAAAA,EAEF,OACF,IAAA,MAAA,CACE,IAAK,GAAIM,CAAAA,CAAC,CAAL,CAAA,CAAWC,GAAG,CAAGT,SAAS,CAA/B,MAAA,CAAwCQ,CAAC,CAAzC,GAAA,CAAiDA,CAAjD,EAAA,CAAsD,CACpD,GAAME,CAAAA,QAAQ,CAAGV,SAAS,CAA1B,CAA0B,CAA1B,CACA,GAAI,CAACK,CAAC,CAADA,KAAAA,CAAAA,cAAAA,CAAL,QAAKA,CAAL,CAAuC,SAEvC,GAAIK,QAAQ,GAAZ,SAAA,CAA4B,CAC1B,GAAIP,SAAS,CAATA,GAAAA,CAAJ,QAAIA,CAAJ,CAA6B,CAC3BG,MAAM,CAANA,KAAAA,CADF,CAAA,IAEO,CACLH,SAAS,CAATA,GAAAA,CAAAA,QAAAA,EAEH,CAND,CAAA,IAMO,CACL,GAAMQ,CAAAA,QAAQ,CAAGN,CAAC,CAADA,KAAAA,CAAjB,QAAiBA,CAAjB,CACA,GAAMO,CAAAA,UAAU,CAAGR,cAAc,CAAdA,QAAc,CAAdA,EAA4B,GAA/C,CAAA,GAA+C,EAA/C,CACA,GAAIQ,UAAU,CAAVA,GAAAA,CAAJ,QAAIA,CAAJ,CAA8B,CAC5BN,MAAM,CAANA,KAAAA,CADF,CAAA,IAEO,CACLM,UAAU,CAAVA,GAAAA,CAAAA,QAAAA,EACAR,cAAc,CAAdA,QAAc,CAAdA,CAAAA,UAAAA,CAEH,CACF,CA9BL,OAAA,CAkCA,MAAA,CAAA,MAAA,CA/CF,CAAA,CAmDF,CAIA,QAAA,CAAA,gBAAA,CAAA,YAAA,CAAA,KAAA,CAGE,CACA,MAAOS,CAAAA,YAAY,CAAZA,MAAAA,CAEH,SAAA,IAAA,CAAA,WAAA,CAAoE,CAClE,GAAMC,CAAAA,mBAAmB,CAAGjB,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAAA,OAAAA,CAC1BkB,WAAW,CAAXA,KAAAA,CADF,QAA4BlB,CAA5B,CAGA,MAAOC,CAAAA,IAAI,CAAJA,MAAAA,CAAP,mBAAOA,CAAP,CANCe,CAAAA,CAAAA,EAAAA,EAAAA,MAAAA,CAAAA,gBAAAA,CAAAA,EAAAA,EAAAA,OAAAA,GAAAA,MAAAA,CAYGG,WAAW,CAACC,KAAK,CAZpBJ,SAYc,CAZdA,EAAAA,MAAAA,CAaGP,MAbHO,EAAAA,EAAAA,OAAAA,GAAAA,GAAAA,CAeA,SAAA,CAAA,CAAA,CAAA,CAA2C,CAC9C,GAAMN,CAAAA,GAAG,CAAGW,CAAC,CAADA,GAAAA,EAAZ,CAAA,CACA,MAAOrB,CAAAA,MAAAA,CAAAA,OAAAA,CAAAA,YAAAA,CAAAA,CAAAA,CAAsB,CAAEU,GAA/B,CAA+BA,GAAF,CAAtBV,CAAP,CAjBJ,CAAOgB,CAAP,CAqBF,IAAMM,CAAAA,MAAM,CAAG,CAAA,EAAA,WAAA,CAAf,OAAe,GAAf,CAMA,QAAA,CAAA,IAAA,MAA2D,IAA3D,CAAA,QAA2D,MAA3D,QAA2D,CACzD,MACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,WAAA,CAAD,eAAC,CAAD,QAAA,CAAA,IAAA,CACIC,SAAAA,QAAD,QACC,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,mBAAA,CAAD,kBAAC,CAAD,QAAA,CAAA,IAAA,CACIC,SAAAA,UAAD,QACC,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CACE,uBAAuB,CADzB,gBAAA,CAEE,iBAAiB,CAFnB,UAAA,CAGE,SAAS,CAAE,CAAA,EAAA,IAAA,CAAA,WAAA,EAHb,QAGa,CAHb,CAAA,CALV,QAKU,CADD,EADH,CADD,EADH,CADF,CAmBFC,C,GApBA,I,CAoBAA,IAAI,CAAJA,MAAAA,CAAcH,MAAM,CAApBG,MAAAA,C,aAEeA,I","sourcesContent":["import React from 'react'\nimport withSideEffect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let unique = true\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        unique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          unique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              unique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if (categories.has(category)) {\n              unique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return unique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      return React.cloneElement(c, { key })\n    })\n}\n\nconst Effect = withSideEffect()\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  return (\n    <AmpStateContext.Consumer>\n      {(ampState) => (\n        <HeadManagerContext.Consumer>\n          {(updateHead) => (\n            <Effect\n              reduceComponentsToState={reduceComponents}\n              handleStateChange={updateHead}\n              inAmpMode={isInAmpMode(ampState)}\n            >\n              {children}\n            </Effect>\n          )}\n        </HeadManagerContext.Consumer>\n      )}\n    </AmpStateContext.Consumer>\n  )\n}\n\nHead.rewind = Effect.rewind\n\nexport default Head\n"]},"metadata":{},"sourceType":"script"}