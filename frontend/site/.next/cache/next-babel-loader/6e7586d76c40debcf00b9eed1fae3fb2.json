{"ast":null,"code":"var _jsxFileName = \"/Users/theo/Code/guided/frontend/site/src/components/Layout/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport { h4 } from 'styles/text';\nimport { hairline, half, whole } from 'styles/dimensions';\nimport { border } from 'styles/colors';\nimport Link from 'components/Link';\nexport default class Layout extends React.Component {\n  renderHeader() {\n    const items = [{\n      text: 'Home',\n      link: '/'\n    }, {\n      text: 'Account',\n      link: '/account'\n    }];\n    return __jsx(View, {\n      style: styles.headerRoot,\n      accessibilityRole: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, items.map(item => {\n      return __jsx(Link, {\n        style: styles.headerItem,\n        href: item.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, item.text);\n    }));\n  }\n\n  render() {\n    return __jsx(View, {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, this.renderHeader(), __jsx(View, {\n      style: styles.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, this.props.children));\n  }\n\n}\nconst styles = StyleSheet.create({\n  root: {\n    flexDirection: 'column',\n    width: 800,\n    alignSelf: 'center',\n    height: '100%'\n  },\n  headerRoot: {\n    flexDirection: 'row',\n    flexGrow: 0,\n    borderBottomColor: border,\n    borderBottomWidth: hairline\n  },\n  headerItem: _objectSpread(_objectSpread({}, h4), {}, {\n    paddingTop: whole,\n    paddingBottom: whole,\n    paddingLeft: half,\n    paddingRight: half\n  }),\n  content: {\n    flexGrow: 1,\n    marginTop: half\n  }\n});","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/components/Layout/index.tsx"],"names":["React","h4","hairline","half","whole","border","Link","Layout","Component","renderHeader","items","text","link","styles","headerRoot","map","item","headerItem","render","root","content","props","children","StyleSheet","create","flexDirection","width","alignSelf","height","flexGrow","borderBottomColor","borderBottomWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAAQC,EAAR,QAAiB,aAAjB;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,KAAxB,QAAoC,mBAApC;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAKA,eAAe,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAmD;AAChEC,EAAAA,YAAY,GAAG;AAKb,UAAMC,KAAa,GAAG,CACpB;AACEC,MAAAA,IAAI,EAAE,MADR;AAEEC,MAAAA,IAAI,EAAE;AAFR,KADoB,EAKpB;AACED,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,IAAI,EAAE;AAFR,KALoB,CAAtB;AAWA,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,UAApB;AAAgC,MAAA,iBAAiB,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AACnB,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAgC,QAAA,IAAI,EAAED,IAAI,CAACJ,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,IAAI,CAACL,IADR,CADF;AAKD,KANA,CADH,CADF;AAWD;;AAEDO,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,YAAL,EADH,EAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACO,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKC,KAAL,CAAWC,QAAzC,CAFF,CADF;AAMD;;AArC+D;AAwClE,MAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,IAAI,EAAE;AACJM,IAAAA,aAAa,EAAE,QADX;AAEJC,IAAAA,KAAK,EAAE,GAFH;AAGJC,IAAAA,SAAS,EAAE,QAHP;AAIJC,IAAAA,MAAM,EAAE;AAJJ,GADyB;AAO/Bd,EAAAA,UAAU,EAAE;AACVW,IAAAA,aAAa,EAAE,KADL;AAEVI,IAAAA,QAAQ,EAAE,CAFA;AAGVC,IAAAA,iBAAiB,EAAEzB,MAHT;AAIV0B,IAAAA,iBAAiB,EAAE7B;AAJT,GAPmB;AAa/Be,EAAAA,UAAU,kCACLhB,EADK;AAER+B,IAAAA,UAAU,EAAE5B,KAFJ;AAGR6B,IAAAA,aAAa,EAAE7B,KAHP;AAIR8B,IAAAA,WAAW,EAAE/B,IAJL;AAKRgC,IAAAA,YAAY,EAAEhC;AALN,IAbqB;AAoB/BiB,EAAAA,OAAO,EAAE;AACPS,IAAAA,QAAQ,EAAE,CADH;AAEPO,IAAAA,SAAS,EAAEjC;AAFJ;AApBsB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\nimport {h4} from 'styles/text';\nimport {hairline, half, whole} from 'styles/dimensions';\nimport {border} from 'styles/colors';\nimport Link from 'components/Link';\n\ntype Props = {};\ntype State = {};\n\nexport default class Layout extends React.Component<Props, State> {\n  renderHeader() {\n    type Item = {\n      text: string;\n      link: string;\n    };\n    const items: Item[] = [\n      {\n        text: 'Home',\n        link: '/',\n      },\n      {\n        text: 'Account',\n        link: '/account',\n      },\n    ];\n\n    return (\n      <View style={styles.headerRoot} accessibilityRole=\"header\">\n        {items.map((item) => {\n          return (\n            <Link style={styles.headerItem} href={item.link}>\n              {item.text}\n            </Link>\n          );\n        })}\n      </View>\n    );\n  }\n\n  render() {\n    return (\n      <View style={styles.root}>\n        {this.renderHeader()}\n        <View style={styles.content}>{this.props.children}</View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flexDirection: 'column',\n    width: 800,\n    alignSelf: 'center',\n    height: '100%',\n  },\n  headerRoot: {\n    flexDirection: 'row',\n    flexGrow: 0,\n    borderBottomColor: border,\n    borderBottomWidth: hairline,\n  },\n  headerItem: {\n    ...h4,\n    paddingTop: whole,\n    paddingBottom: whole,\n    paddingLeft: half,\n    paddingRight: half,\n  },\n  content: {\n    flexGrow: 1,\n    marginTop: half,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}