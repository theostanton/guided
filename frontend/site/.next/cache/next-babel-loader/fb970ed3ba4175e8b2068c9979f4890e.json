{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/Users/theo/Code/guided/frontend/site/src/screens/Profile/index.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport { inject } from 'mobx-react';\nvar ProfileScreen = (_dec = inject('authStore'), _dec(_class = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProfileScreen, _React$Component);\n\n  var _super = _createSuper(ProfileScreen);\n\n  function ProfileScreen() {\n    _classCallCheck(this, ProfileScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProfileScreen, [{\n    key: \"render\",\n    value: function render() {\n      console.log('ProfileScreen props', this.props);\n      return __jsx(View, {\n        style: styles.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, __jsx(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, \"Profile of \", this.props.params.username));\n    }\n  }]);\n\n  return ProfileScreen;\n}(React.Component)) || _class);\nexport { ProfileScreen as default };\nvar styles = StyleSheet.create({\n  root: {\n    maxWidth: 400,\n    width: '100%',\n    alignSelf: 'center',\n    flexDirection: 'column'\n  },\n  textInput: {},\n  button: {}\n});","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/screens/Profile/index.tsx"],"names":["React","inject","ProfileScreen","console","log","props","styles","root","params","username","Component","StyleSheet","create","maxWidth","width","alignSelf","flexDirection","textInput","button"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAAQC,MAAR,QAAqB,YAArB;IAMqBC,a,WADpBD,MAAM,CAAC,WAAD,C;;;;;;;;;;;;;6BAEI;AACPE,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkC,KAAKC,KAAvC;AACA,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,QAApC,CADF,CADF;AAKD;;;;EARwCT,KAAK,CAACU,S;SAA5BR,a;AAWrB,IAAMI,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,IAAI,EAAE;AACJM,IAAAA,QAAQ,EAAE,GADN;AAEJC,IAAAA,KAAK,EAAE,MAFH;AAGJC,IAAAA,SAAS,EAAE,QAHP;AAIJC,IAAAA,aAAa,EAAE;AAJX,GADyB;AAO/BC,EAAAA,SAAS,EAAE,EAPoB;AAQ/BC,EAAAA,MAAM,EAAE;AARuB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\nimport {inject} from 'mobx-react';\nimport {ScreenProps} from 'utils/router/ScreenProps';\n\ntype Props = ScreenProps<'Profile'>\n\n@inject('authStore')\nexport default class ProfileScreen extends React.Component<Props> {\n  render() {\n    console.log('ProfileScreen props',this.props)\n    return (\n      <View style={styles.root}>\n        <Text>Profile of {this.props.params.username}</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    maxWidth: 400,\n    width: '100%',\n    alignSelf: 'center',\n    flexDirection: 'column',\n  },\n  textInput: {},\n  button: {},\n});\n"]},"metadata":{},"sourceType":"module"}