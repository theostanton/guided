{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/Users/theo/Code/guided/frontend/site/src/pages/account.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport Layout from 'components/Layout';\nimport LabelledTextInput from 'components/LabelledTextInput';\nimport React from 'react';\nimport { h1 } from 'styles/text';\nimport { inject, observer } from 'mobx-react';\nvar AccountPage = (_dec = inject('authStore'), _dec(_class = observer(_class = /*#__PURE__*/function (_React$Component) {\n  _inherits(AccountPage, _React$Component);\n\n  var _super = _createSuper(AccountPage);\n\n  function AccountPage() {\n    _classCallCheck(this, AccountPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AccountPage, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, __jsx(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, __jsx(Text, {\n        style: h1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, \"Account page!\"), __jsx(LabelledTextInput, {\n        label: 'Username',\n        initialText: props.authStore.user.username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }), __jsx(LabelledTextInput, {\n        label: 'Email',\n        initialText: props.authStore.user.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return AccountPage;\n}(React.Component)) || _class) || _class);\nexport { AccountPage as default };\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/pages/account.tsx"],"names":["Layout","LabelledTextInput","React","h1","inject","observer","AccountPage","props","authStore","user","username","email","Component","styles","StyleSheet","create"],"mappings":";;;;;;;;;;;;;;;;;;;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,EAAR,QAAiB,aAAjB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;IASqBC,W,WAFpBF,MAAM,CAAC,WAAD,C,gBACNC,Q;;;;;;;;;;;;;6BAEU;AACP,aACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,MAAC,iBAAD;AACE,QAAA,KAAK,EAAE,UADT;AAEE,QAAA,WAAW,EAAEI,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBC,QAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAME,MAAC,iBAAD;AACE,QAAA,KAAK,EAAE,OADT;AAEE,QAAA,WAAW,EAAEH,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBE,KAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CADF;AAeD;;;;EAjBsCT,KAAK,CAACU,S;SAA1BN,W;AAoBrB,IAAMO,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import {StyleSheet, Text, View} from 'react-native';\nimport Layout from 'components/Layout';\nimport LabelledTextInput from 'components/LabelledTextInput';\nimport React from 'react';\nimport {h1} from 'styles/text';\nimport {inject, observer} from 'mobx-react';\nimport AuthStore from 'stores/AuthStore';\n\ntype Props = {\n  authStore: AuthStore;\n};\n\n@inject('authStore')\n@observer\nexport default class AccountPage extends React.Component<Props> {\n  render() {\n    return (\n      <Layout>\n        <View>\n          <Text style={h1}>Account page!</Text>\n          <LabelledTextInput\n            label={'Username'}\n            initialText={props.authStore.user.username}\n          />\n          <LabelledTextInput\n            label={'Email'}\n            initialText={props.authStore.user.email}\n          />\n        </View>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}