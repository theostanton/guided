{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/theo/Code/guided/frontend/site/src/components/Signup/index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Button from \"react-native-web/dist/cjs/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/cjs/exports/StyleSheet\";\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport { inject } from 'mobx-react';\nimport LabelledTextInput from 'components/LabelledTextInput';\nlet Signup = (_dec = inject('authStore'), _dec(_class = (_temp = class Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      error: undefined,\n      loading: false\n    };\n  }\n\n  get buttonDisabled() {\n    console.log('buttonDisabled()');\n    return this.state.email.length === 0 || this.state.username.length === 0 || this.state.password.length === 0 || this.state.loading === true;\n  }\n\n  async signUp() {\n    const {\n      password,\n      username,\n      email\n    } = this.state;\n    this.setState({\n      loading: true\n    });\n\n    try {\n      const result = await this.props.authStore.signUp(username, email, password);\n\n      if (result.success) {// await navigate(`/`)\n      } else {\n        this.setState({\n          error: result.message || 'Something went wrong',\n          loading: false\n        });\n      }\n    } catch (e) {\n      console.error(e);\n      this.setState({\n        error: e,\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return __jsx(View, {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, __jsx(LabelledTextInput, {\n      label: 'Username',\n      inputType: 'username',\n      onChange: text => {\n        this.setState({\n          username: text\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Login component\"), __jsx(LabelledTextInput, {\n      label: 'Email',\n      onChange: text => {\n        this.setState({\n          email: text\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Login component\"), __jsx(LabelledTextInput, {\n      label: 'Password',\n      inputType: 'password',\n      onChange: text => {\n        this.setState({\n          password: text\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Login component\"), __jsx(View, {\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      title: 'Log in',\n      disabled: this.buttonDisabled,\n      onPress: async () => {\n        await this.signUp();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}, _temp)) || _class);\nexport { Signup as default };\nconst styles = StyleSheet.create({\n  root: {\n    maxWidth: 400,\n    width: '100%',\n    alignSelf: 'center',\n    flexDirection: 'column'\n  },\n  textInput: {},\n  button: {}\n});","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/components/Signup/index.tsx"],"names":["React","inject","LabelledTextInput","Signup","Component","state","email","username","password","error","undefined","loading","buttonDisabled","console","log","length","signUp","setState","result","props","authStore","success","message","e","render","styles","root","text","button","StyleSheet","create","maxWidth","width","alignSelf","flexDirection","textInput"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Button, StyleSheet, View} from 'react-native';\nimport AuthStore from 'stores/AuthStore';\nimport {inject} from 'mobx-react';\nimport LabelledTextInput from 'components/LabelledTextInput';\n\ntype Props = {\n  authStore?: AuthStore;\n};\ntype State = {\n  email: string;\n  username: string;\n  password: string;\n  loading: boolean;\n  error: any | undefined;\n};\n\n@inject('authStore')\nexport default class Signup extends React.Component<Props, State> {\n  state: State = {\n    email: '',\n    username: '',\n    password: '',\n    error: undefined,\n    loading: false,\n  };\n\n  get buttonDisabled(): boolean {\n    console.log('buttonDisabled()');\n    return (\n      this.state.email.length === 0 ||\n      this.state.username.length === 0 ||\n      this.state.password.length === 0 ||\n      this.state.loading === true\n    );\n  }\n\n  async signUp(): Promise<void> {\n    const {password, username, email} = this.state;\n    this.setState({loading: true});\n    try {\n      const result = await this.props.authStore.signUp(\n        username,\n        email,\n        password,\n      );\n      if (result.success) {\n        // await navigate(`/`)\n      } else {\n        this.setState({\n          error: result.message || 'Something went wrong',\n          loading: false,\n        });\n      }\n    } catch (e) {\n      console.error(e);\n      this.setState({error: e, loading: false});\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.root}>\n        <LabelledTextInput\n          label={'Username'}\n          inputType={'username'}\n          onChange={(text) => {\n            this.setState({\n              username: text,\n            });\n          }}>\n          Login component\n        </LabelledTextInput>\n        <LabelledTextInput\n          label={'Email'}\n          onChange={(text) => {\n            this.setState({\n              email: text,\n            });\n          }}>\n          Login component\n        </LabelledTextInput>\n        <LabelledTextInput\n          label={'Password'}\n          inputType={'password'}\n          onChange={(text) => {\n            this.setState({\n              password: text,\n            });\n          }}>\n          Login component\n        </LabelledTextInput>\n        <View style={styles.button}>\n          <Button\n            title={'Log in'}\n            disabled={this.buttonDisabled}\n            onPress={async () => {\n              await this.signUp();\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    maxWidth: 400,\n    width: '100%',\n    alignSelf: 'center',\n    flexDirection: 'column',\n  },\n  textInput: {},\n  button: {},\n});\n"]},"metadata":{},"sourceType":"module"}