{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/theo/Code/guided/frontend/site/src/components/Link/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport NextLink from 'next/link';\nimport Text from \"react-native-web/dist/cjs/exports/Text\";\n\nvar Link = /*#__PURE__*/function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  var _super = _createSuper(Link);\n\n  function Link() {\n    var _this;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._textRef = void 0;\n    _this.state = {\n      hover: false\n    };\n\n    _this._setRef = function (c) {\n      _this._textRef = c;\n    };\n\n    return _this;\n  }\n\n  _createClass(Link, [{\n    key: \"blur\",\n    value: function blur() {\n      this._textRef.blur();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._textRef.focus();\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      this._textRef.setNativeProps(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          as = _this$props.as,\n          passHref = _this$props.passHref,\n          scroll = _this$props.scroll,\n          prefetch = _this$props.prefetch,\n          href = _this$props.href,\n          shallow = _this$props.shallow,\n          replace = _this$props.replace,\n          rest = _objectWithoutProperties(_this$props, [\"as\", \"passHref\", \"scroll\", \"prefetch\", \"href\", \"shallow\", \"replace\"]);\n\n      return __jsx(NextLink, {\n        href: href,\n        passHref: true,\n        prefetch: prefetch,\n        replace: replace,\n        scroll: scroll,\n        shallow: shallow,\n        onMouseEnter: function onMouseEnter() {\n          _this2.setState({\n            hover: true\n          });\n        },\n        onMouseLeave: function onMouseLeave() {\n          _this2.setState({\n            hover: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, __jsx(Text, _extends({\n        accessibilityRole: \"link\",\n        ref: this._setRef\n      }, rest, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }), this.props.children));\n    }\n  }]);\n\n  return Link;\n}(React.Component);\n\nexport { Link as default };","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/components/Link/index.tsx"],"names":["React","NextLink","Link","_textRef","state","hover","_setRef","c","blur","focus","props","setNativeProps","as","passHref","scroll","prefetch","href","shallow","replace","rest","setState","children","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;IAiBqBC,I;;;;;;;;;;;;;;;UACXC,Q;UAERC,K,GAAe;AACbC,MAAAA,KAAK,EAAE;AADM,K;;UAgBfC,O,GAAU,UAACC,CAAD,EAAO;AACf,YAAKJ,QAAL,GAAgBI,CAAhB;AACD,K;;;;;;;2BAdM;AACL,WAAKJ,QAAL,CAAcK,IAAd;AACD;;;4BAEO;AACN,WAAKL,QAAL,CAAcM,KAAd;AACD;;;mCAEcC,K,EAAO;AACpB,WAAKP,QAAL,CAAcQ,cAAd,CAA6BD,KAA7B;AACD;;;6BAMQ;AAAA;;AAAA,wBAUH,KAAKA,KAVF;AAAA,UAELE,EAFK,eAELA,EAFK;AAAA,UAGLC,QAHK,eAGLA,QAHK;AAAA,UAILC,MAJK,eAILA,MAJK;AAAA,UAKLC,QALK,eAKLA,QALK;AAAA,UAMLC,IANK,eAMLA,IANK;AAAA,UAOLC,OAPK,eAOLA,OAPK;AAAA,UAQLC,OARK,eAQLA,OARK;AAAA,UASFC,IATE;;AAYP,aACE,MAAC,QAAD;AACE,QAAA,IAAI,EAAEH,IADR;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,QAAQ,EAAED,QAHZ;AAIE,QAAA,OAAO,EAAEG,OAJX;AAKE,QAAA,MAAM,EAAEJ,MALV;AAME,QAAA,OAAO,EAAEG,OANX;AAOE,QAAA,YAAY,EAAE,wBAAM;AAClB,UAAA,MAAI,CAACG,QAAL,CAAc;AACZf,YAAAA,KAAK,EAAE;AADK,WAAd;AAGD,SAXH;AAYE,QAAA,YAAY,EAAE,wBAAM;AAClB,UAAA,MAAI,CAACe,QAAL,CAAc;AACZf,YAAAA,KAAK,EAAE;AADK,WAAd;AAGD,SAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiBE,MAAC,IAAD;AAAM,QAAA,iBAAiB,EAAC,MAAxB;AAA+B,QAAA,GAAG,EAAE,KAAKC;AAAzC,SAAsDa,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,KAAKT,KAAL,CAAWW,QADd,CAjBF,CADF;AAuBD;;;;EA1D+BrB,KAAK,CAACsB,S;;SAAnBpB,I","sourcesContent":["import React, {Ref} from 'react';\nimport NextLink from 'next/link';\nimport {LinkProps} from 'next/link';\nimport Router from 'next/router';\nimport {StyleSheet, Text, TextStyle, View, ViewStyle} from 'react-native';\n\ntype Props = {\n  href?: string;\n  onClick?: () => Promise<void>;\n  viewStyle?: ViewStyle;\n  textStyle?: TextStyle;\n  selected?: boolean;\n} & LinkProps &\n  TextStyle;\ntype State = {\n  hover: boolean;\n};\n\nexport default class Link extends React.Component<Props, State> {\n  private _textRef: any;\n\n  state: State = {\n    hover: false,\n  };\n\n  blur() {\n    this._textRef.blur();\n  }\n\n  focus() {\n    this._textRef.focus();\n  }\n\n  setNativeProps(props) {\n    this._textRef.setNativeProps(props);\n  }\n\n  _setRef = (c) => {\n    this._textRef = c;\n  };\n\n  render() {\n    const {\n      as,\n      passHref, // ignore\n      scroll,\n      prefetch,\n      href,\n      shallow,\n      replace,\n      ...rest\n    } = this.props;\n\n    return (\n      <NextLink\n        href={href}\n        passHref={true}\n        prefetch={prefetch}\n        replace={replace}\n        scroll={scroll}\n        shallow={shallow}\n        onMouseEnter={() => {\n          this.setState({\n            hover: true,\n          });\n        }}\n        onMouseLeave={() => {\n          this.setState({\n            hover: false,\n          });\n        }}>\n        <Text accessibilityRole=\"link\" ref={this._setRef} {...rest}>\n          {this.props.children}\n        </Text>\n      </NextLink>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}