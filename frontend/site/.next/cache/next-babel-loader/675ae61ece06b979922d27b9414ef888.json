{"ast":null,"code":"import AsyncStorageFactory from '@react-native-community/async-storage';\nconst storage = AsyncStorageFactory.create();\nexport async function setItem(key, value) {\n  return storage[key] = value;\n}\n\nfunction setToken(value) {\n  return setItem('token', value);\n}\n\nfunction getToken(value) {\n  return getItem('token', value);\n}\n\nfunction removeItem(key) {\n  const items = storageService.store();\n  delete items[key];\n  localStorage[namespace] = JSON.stringify(items);\n  return storageService;\n}\n\nfunction getItem(key) {\n  const items = storageService.store();\n  return items[key];\n}\n\nfunction store() {\n  return JSON.parse(localStorage[namespace]);\n}\n\nfunction clear() {\n  delete localStorage[namespace];\n  initWithNamespace(namespace);\n  return storageService;\n}\n\nfunction initWithNamespace(nspace) {\n  if (typeof localStorage !== 'undefined') {\n    localStorage[nspace] = localStorage[nspace] ? localStorage[nspace] : '{}';\n  }\n}\n\nfunction getAllFromLocalStorage() {\n  return Promise.resolve(JSON.parse(localStorage[namespace]));\n}","map":{"version":3,"sources":["/Users/theo/Code/guided/frontend/site/src/utils/storage.ts"],"names":["AsyncStorageFactory","storage","create","setItem","key","value","setToken","getToken","getItem","removeItem","items","storageService","store","localStorage","namespace","JSON","stringify","parse","clear","initWithNamespace","nspace","getAllFromLocalStorage","Promise","resolve"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,uCAAhC;AAEA,MAAMC,OAAO,GAAGD,mBAAmB,CAACE,MAApB,EAAhB;AAEA,OAAO,eAAeC,OAAf,CAAuBC,GAAvB,EAAoCC,KAApC,EAAmD;AACxD,SAAQJ,OAAO,CAACG,GAAD,CAAP,GAAeC,KAAvB;AACD;;AAED,SAASC,QAAT,CAAkBD,KAAlB,EAAyB;AACvB,SAAOF,OAAO,CAAC,OAAD,EAAUE,KAAV,CAAd;AACD;;AAED,SAASE,QAAT,CAAkBF,KAAlB,EAAyB;AACvB,SAAOG,OAAO,CAAC,OAAD,EAAUH,KAAV,CAAd;AACD;;AAED,SAASI,UAAT,CAAoBL,GAApB,EAAyB;AACvB,QAAMM,KAAK,GAAGC,cAAc,CAACC,KAAf,EAAd;AACA,SAAOF,KAAK,CAACN,GAAD,CAAZ;AACAS,EAAAA,YAAY,CAACC,SAAD,CAAZ,GAA0BC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAA1B;AAEA,SAAOC,cAAP;AACD;;AAED,SAASH,OAAT,CAAiBJ,GAAjB,EAAsB;AACpB,QAAMM,KAAK,GAAGC,cAAc,CAACC,KAAf,EAAd;AAEA,SAAOF,KAAK,CAACN,GAAD,CAAZ;AACD;;AAED,SAASQ,KAAT,GAAiB;AACf,SAAOG,IAAI,CAACE,KAAL,CAAWJ,YAAY,CAACC,SAAD,CAAvB,CAAP;AACD;;AAED,SAASI,KAAT,GAAiB;AACf,SAAOL,YAAY,CAACC,SAAD,CAAnB;AACAK,EAAAA,iBAAiB,CAACL,SAAD,CAAjB;AAEA,SAAOH,cAAP;AACD;;AAED,SAASQ,iBAAT,CAA2BC,MAA3B,EAAmC;AACjC,MAAI,OAAOP,YAAP,KAAwB,WAA5B,EAAyC;AACvCA,IAAAA,YAAY,CAACO,MAAD,CAAZ,GAAuBP,YAAY,CAACO,MAAD,CAAZ,GAAuBP,YAAY,CAACO,MAAD,CAAnC,GAA8C,IAArE;AACD;AACF;;AAED,SAASC,sBAAT,GAAkC;AAChC,SAAOC,OAAO,CAACC,OAAR,CAAgBR,IAAI,CAACE,KAAL,CAAWJ,YAAY,CAACC,SAAD,CAAvB,CAAhB,CAAP;AACD","sourcesContent":["import AsyncStorageFactory from '@react-native-community/async-storage';\n\nconst storage = AsyncStorageFactory.create();\n\nexport async function setItem(key: string, value: string) {\n  return (storage[key] = value);\n}\n\nfunction setToken(value) {\n  return setItem('token', value);\n}\n\nfunction getToken(value) {\n  return getItem('token', value);\n}\n\nfunction removeItem(key) {\n  const items = storageService.store();\n  delete items[key];\n  localStorage[namespace] = JSON.stringify(items);\n\n  return storageService;\n}\n\nfunction getItem(key) {\n  const items = storageService.store();\n\n  return items[key];\n}\n\nfunction store() {\n  return JSON.parse(localStorage[namespace]);\n}\n\nfunction clear() {\n  delete localStorage[namespace];\n  initWithNamespace(namespace);\n\n  return storageService;\n}\n\nfunction initWithNamespace(nspace) {\n  if (typeof localStorage !== 'undefined') {\n    localStorage[nspace] = localStorage[nspace] ? localStorage[nspace] : '{}';\n  }\n}\n\nfunction getAllFromLocalStorage() {\n  return Promise.resolve(JSON.parse(localStorage[namespace]));\n}\n"]},"metadata":{},"sourceType":"module"}