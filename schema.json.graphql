# This file was generated based on "schema.json". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

type Guide {
    _deleted: Boolean
    _lastChangedAt: AWSTimestamp!
    _version: Int!
    id: ID!
    title: String!
}

type ModelGuideConnection {
    items: [Guide]
    nextToken: String
    startedAt: AWSTimestamp
}

type Mutation {
    createGuide(condition: ModelGuideConditionInput, input: CreateGuideInput!): Guide
    deleteGuide(condition: ModelGuideConditionInput, input: DeleteGuideInput!): Guide
    updateGuide(condition: ModelGuideConditionInput, input: UpdateGuideInput!): Guide
}

type Query {
    getGuide(id: ID!): Guide
    listGuides(filter: ModelGuideFilterInput, limit: Int, nextToken: String): ModelGuideConnection
    syncGuides(filter: ModelGuideFilterInput, lastSync: AWSTimestamp, limit: Int, nextToken: String): ModelGuideConnection
}

type Subscription {
    onCreateGuide: Guide
    onDeleteGuide: Guide
    onUpdateGuide: Guide
}

enum ModelAttributeTypes {
    _null
    binary
    binarySet
    bool
    list
    map
    number
    numberSet
    string
    stringSet
}

enum ModelSortDirection {
    ASC
    DESC
}

input CreateGuideInput {
    _version: Int
    id: ID
    title: String!
}

input DeleteGuideInput {
    _version: Int
    id: ID
}

input ModelBooleanInput {
    attributeExists: Boolean
    attributeType: ModelAttributeTypes
    eq: Boolean
    ne: Boolean
}

input ModelFloatInput {
    attributeExists: Boolean
    attributeType: ModelAttributeTypes
    between: [Float]
    eq: Float
    ge: Float
    gt: Float
    le: Float
    lt: Float
    ne: Float
}

input ModelGuideConditionInput {
    and: [ModelGuideConditionInput]
    not: ModelGuideConditionInput
    or: [ModelGuideConditionInput]
    title: ModelStringInput
}

input ModelGuideFilterInput {
    and: [ModelGuideFilterInput]
    id: ModelIDInput
    not: ModelGuideFilterInput
    or: [ModelGuideFilterInput]
    title: ModelStringInput
}

input ModelIDInput {
    attributeExists: Boolean
    attributeType: ModelAttributeTypes
    beginsWith: ID
    between: [ID]
    contains: ID
    eq: ID
    ge: ID
    gt: ID
    le: ID
    lt: ID
    ne: ID
    notContains: ID
    size: ModelSizeInput
}

input ModelIntInput {
    attributeExists: Boolean
    attributeType: ModelAttributeTypes
    between: [Int]
    eq: Int
    ge: Int
    gt: Int
    le: Int
    lt: Int
    ne: Int
}

input ModelSizeInput {
    between: [Int]
    eq: Int
    ge: Int
    gt: Int
    le: Int
    lt: Int
    ne: Int
}

input ModelStringInput {
    attributeExists: Boolean
    attributeType: ModelAttributeTypes
    beginsWith: String
    between: [String]
    contains: String
    eq: String
    ge: String
    gt: String
    le: String
    lt: String
    ne: String
    notContains: String
    size: ModelSizeInput
}

input UpdateGuideInput {
    _version: Int
    id: ID!
    title: String
}


"The `AWSTimestamp` scalar type provided by AWS AppSync, represents the number of seconds that have elapsed since `1970-01-01T00:00Z`. Negative values are also accepted and these represent the number of seconds till `1970-01-01T00:00Z`.  Timestamps are serialized and deserialized as integers. The minimum supported timestamp value is **`-31557014167219200`** which corresponds to `-1000000000-01-01T00:00Z`. The maximum supported timestamp value is **`31556889864403199`** which corresponds to `1000000000-12-31T23:59:59.999999999Z`."
scalar AWSTimestamp